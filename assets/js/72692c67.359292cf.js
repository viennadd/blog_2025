"use strict";(self.webpackChunkdd_notes=self.webpackChunkdd_notes||[]).push([[5187],{4990:(n,t,i)=>{i.r(t),i.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>h,frontMatter:()=>a,metadata:()=>e,toc:()=>l});var e=i(1816),r=i(5105),o=i(6755);const a={title:"\u975e\u57fa\u4e8e\u6bd4\u8f83\u7684\u6392\u5e8f\u7b97\u6cd5",date:new Date("2016-03-21T23:42:16.000Z"),tags:["\u6392\u5e8f"],categories:"Tech Notes",authors:["alexchen"]},s=void 0,c={authorsImageUrls:[void 0]},l=[{value:"\u8ba1\u6570\u6392\u5e8f",id:"\u8ba1\u6570\u6392\u5e8f",level:3},{value:"\u6876\u6392\u5e8f (Bucket Sort)",id:"\u6876\u6392\u5e8f-bucket-sort",level:3},{value:"\u57fa\u6570\u6392\u5e8f (Radix Sort)",id:"\u57fa\u6570\u6392\u5e8f-radix-sort",level:3}];function d(n){const t={a:"a",code:"code",h3:"h3",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",...(0,o.R)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.p,{children:"\u8ba1\u6570\u6392\u5e8f(Counting Sort)\u3001\u6876\u6392\u5e8f\u3001\u57fa\u6570\u6392\u5e8f\u4e09\u4e2a\u5df2\u7ecf\u6709\u4e0d\u5c11\u5f88\u597d\u7684\u535a\u5ba2\u6587\u7ae0\u4ecb\u7ecd\uff0c\u4f46\u4e0d\u81ea\u5df1\u5c1d\u8bd5\u63cf\u8ff0\u4e00\u904d\u5c31\u96be\u4ee5\u719f\u6089\uff0c\u6743\u5f53\u8bb0\u5f55\u3002"}),"\n",(0,r.jsxs)(t.p,{children:["\u53c2\u8003\u4e86 ",(0,r.jsx)(t.a,{href:"http://www.cnblogs.com/ttltry-air/archive/2012/08/04/2623302.html",children:"\u8ba1\u6570\u6392\u5e8f\uff0c\u57fa\u6570\u6392\u5e8f\u548c\u6876\u6392\u5e8f"})," \u548c ",(0,r.jsx)(t.a,{href:"https://www.byvoid.com/blog/sort-radix",children:"\u4e09\u79cd\u7ebf\u6027\u6392\u5e8f\u7b97\u6cd5 \u8ba1\u6570\u6392\u5e8f\u3001\u6876\u6392\u5e8f\u4e0e\u57fa\u6570\u6392\u5e8f"})]}),"\n",(0,r.jsx)(t.hr,{}),"\n",(0,r.jsx)(t.h3,{id:"\u8ba1\u6570\u6392\u5e8f",children:"\u8ba1\u6570\u6392\u5e8f"}),"\n",(0,r.jsx)(t.p,{children:"\u9996\u5148\u662f\u4e3b\u8981\u7684\u6b65\u9aa4"}),"\n",(0,r.jsxs)(t.ol,{children:["\n",(0,r.jsx)(t.li,{children:"\u51c6\u5907\u7ebf\u6027\u8868\u5b57\u5178 Dict[], \u5176\u957f\u5ea6 m \u662f\u5f85\u6392\u5e8f\u5143\u7d20\u7684\u8303\u56f4, \u6362\u8a00\u4e4b\u6bcf\u4e2a\u5f85\u6392\u5e8f\u7684\u5143\u7d20\u90fd\u80fd\u5728\u8fd9\u4e2a\u5b57\u5178\u627e\u5230\u5bf9\u5e94\u7684\u4f4d\u7f6e"}),"\n",(0,r.jsx)(t.li,{children:"\u626b\u63cf\u957f\u5ea6\u4e3a n \u7684\u5f85\u6392\u5e8f\u8868 Unordered[], \u628a\u6bcf\u4e2a\u5143\u7d20\u7684\u51fa\u73b0\u6b21\u6570\u8bb0\u5f55\u5728 Dict \u91cc"}),"\n",(0,r.jsx)(t.li,{children:"\u73b0\u5728 Dict \u8bb0\u5f55\u7740\u6bcf\u4e2a\u5143\u7d20\u7684\u7684\u51fa\u73b0\u6b21\u6570, \u800c Dict \u672c\u8eab\u662f\u6709\u5e8f\u7684"}),"\n",(0,r.jsx)(t.li,{children:"\u7ed9 Dict \u505a\u7d2f\u52a0, Dict[i] += Dict[i - 1] for i in 1 to m,"}),"\n",(0,r.jsx)(t.li,{children:"\u7d2f\u52a0\u540e\u5b57\u5178\u7684\u503c\u6307\u5b9a\u4e86\u5143\u7d20\u6392\u5e8f\u540e\u7684\u4f4d\u7f6e\uff0c\u53cd\u5411\u904d\u5386\u5f85\u6392\u5e8f\u7684A, \u7ed3\u5408\u6307\u5b9a\u4e86\u5143\u7d20\u4f4d\u7f6e\u7684\u5b57\u5178C \u5219\u53ef\u751f\u6210\u6709\u5e8f\u7ed3\u679c, \u800c\u53cd\u5411\u904d\u5386\u7684\u5143\u7d20\u4f1a\u653e\u5728\u66f4\u540e\u7684\u4f4d\u7f6e, \u8fd9\u7279\u6027\u786e\u4fdd\u8fd9\u662f\u7a33\u5b9a\u6392\u5e8f"}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:"C \u8bed\u8a00\u4f8b\u5b50"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-cpp",children:'\nvoid PrintArray(int *A, int n)\n{\n    for (int i = 0; i < n; ++i)\n        printf("%d\\t", A[i]);\n    printf("\\n");\n}\n\nvoid CountingSort(int *A, int n, int *C, int m, int *Order)\n{\n    printf("Original Data: \\n");\n    PrintArray(A, n);\n\n    // initialize Dict\n    // memset(C, 0, m * sizeof(m)); \u8fd9\u884c\u5c45\u7136\u5bfc\u81f4\u4ee3\u7801\u7740\u8272\u5931\u6548, \u4e0d\u7528\u62ec\u53f7\u5305\u7740 m \u5219\u95ee\u9898\u89e3\u51b3\uff0c\u7740\u5b9e\u8be1\u5f02\u3002\n    memset(C, 0, m * sizeof m);\n\n    // counting element of A\n    for (int i = 0; i < n; ++i)\n        C[A[i]]++;\n\n    printf("Dict: Before Accumulate\\n");\n    PrintArray(C, m);\n\n    // scan C, accumulate,\n    // \u7d2f\u52a0\u540e, C \u5b57\u5178\u91cc\u7684\u503c\u5c31\u662f \u5143\u7d20\u6709\u5e8f\u540e\u7684\u4f4d\u7f6e, \u56e0\u4e3a\u6bcf\u6b21\u53d6\u5f97\u548c\u5360\u7528\u4f4d\u7f6e\u540e\u5e94\u8be5\u51cf\u4e00, \u4f7f\u7528\u5b57\u5178C \u9006\u904d\u5386A \u5c31\u53ef\u4ee5\u4fdd\u6301\u7a33\u5b9a\u800c\u6709\u5e8f\n    for (int i = 1; i < m; ++i)\n        C[i] += C[i - 1];\n\n    printf("Dict: After Accumulate\\n");\n    PrintArray(C, m);\n\n    // reverse filling result, stable sort\n    for (int i = n - 1; i >= 0; i--)\n    {\n        Order[C[A[i]]] = A[i]; // \u6839\u636e\u5b57\u5178 C \u5f97\u77e5 A[i] \u7684\u4f4d\u7f6e\uff08\u7d2f\u52a0\u540e\u7684C \u7684\u503cx : \u524d\u9762\u6709x\u4e2a\u503c\u6bd4\u6211\u5c0f )\n        C[A[i]]--;\n    }\n\n    printf("Sorted Array:\\n");\n    PrintArray(Order, n);\n\n}\n\nint main()\n{\n    const int K = 10; // maximum in range, size of C\n    const int N = 20; // size of A\n\n    int A[N] = {0};\n    int C[K + 1];\n    int Order[N]; // result\n\n    for (int i = 0; i < N; ++i)\n        A[i] = rand() % K;\n\n    CountingSort(A, N, C, K, Order);\n    return 0;\n}\n'})}),"\n",(0,r.jsx)(t.h3,{id:"\u6876\u6392\u5e8f-bucket-sort",children:"\u6876\u6392\u5e8f (Bucket Sort)"}),"\n",(0,r.jsxs)(t.p,{children:["\u89c2\u770b ",(0,r.jsx)(t.a,{href:"http://www.cs.usfca.edu/~galles/visualization/BucketSort.html",children:"BucketSort Visualization"})," \u540e, \u611f\u89c9\u6876\u6392\u5e8f\u5c31\u50cf\u6563\u5217\u8868\uff0c\u7136\u540e\u52a0\u5165\u4e86\u987a\u5e8f\u7684\u60f3\u6cd5\u3002"]}),"\n",(0,r.jsxs)(t.ol,{children:["\n",(0,r.jsx)(t.li,{children:"\u8fc7\u7a0b\u4e0e\u8ba1\u6570\u6392\u5e8f\u7684\u90e8\u5206\u6b65\u9aa4\u76f8\u8fd1, \u5efa\u7acb Dict \u5b57\u5178\u7528\u4ee5\u50a8\u5b58\u5143\u7d20\u7684\u51fa\u73b0\u60c5\u51b5, Dict \u5176\u5b9e\u53ef\u4ee5\u662f\u7ebf\u6027\u8868\u6216\u8005\u6563\u5217\u8868, \u770b\u9700\u6c42; \u800c\u672c\u6765\u5728\u8ba1\u6570\u6392\u5e8f\u4e2d\u7684\u8ba1\u6570\u6b65\u9aa4\u8fd9\u91cc\u5219\u7c7b\u4f3c\u662f\u6563\u5217\u8868\u7684 Chaining"}),"\n",(0,r.jsx)(t.li,{children:"\u5bf9\u5b57\u5178\u9879\u7684 Chaining \u8fdb\u884c\u6392\u5e8f, \u5b57\u5178\u662f\u6709\u5e8f\u7684, Chaining \u4e5f\u53d8\u6210\u6709\u5e8f, \u626b\u63cf\u4e00\u6b21\u628a\u5143\u7d20\u8bfb\u51fa\u6765\u5c31\u5b8c\u6210\u6392\u5e8f\u4e86"}),"\n"]}),"\n",(0,r.jsx)(t.h3,{id:"\u57fa\u6570\u6392\u5e8f-radix-sort",children:"\u57fa\u6570\u6392\u5e8f (Radix Sort)"}),"\n",(0,r.jsx)(t.p,{children:"\u5047\u8bbe\u662f10 \u8fdb\u5236\u6570\n\u4e3b\u8981\u601d\u60f3\u662f, \u628a\u6574\u6570\u6309\u6570\u4f4d\u5206\u5272, \u7136\u540e\u5c31\u53ef\u4ee5\u5bf9\u4e00\u5217\u4e2a\u4f4d\u6570 key \u8fdb\u884c\u7a33\u5b9a\u6392\u5e8f, from least significant to most significant digit."}),"\n",(0,r.jsx)(t.p,{children:"\u4e00\u5217\u4e2a\u4f4d\u6570\u7684\u6392\u5e8f\u5c31\u5f53\u7136\u662f\u4f7f\u7528\u4e0a\u9762\u7684\u975e\u57fa\u4e8e\u6bd4\u8f83\u7684\u6392\u5e8f\u65b9\u5f0f\u5566, \u6309\u5341\u8fdb\u5236\u6570\u6765\u8bf4, \u6bcf\u6b21\u8ba1\u6570\u6392\u5e8f\u5c31\u9700\u898110\u4e2a\u5751\u6765\u8ba1\u6570"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-cpp",children:"\ninline int extract_digit(int i, int place, const int base = 10)\n{\n    return i / (int)pow(base, place) % base;\n}\n\nvoid CountingSort(vector<int> &v, vector<int> &tmp, int place)\n{\n    const int BASE = 10;\n    int C[BASE] = {0};\n\n    for (int i = 0; i < v.size(); ++i)\n    {\n        int d = extract_digit(v[i], place);\n        C[d]++;\n    }\n\n    for (int i = 1; i < BASE; ++i)\n        C[i] += C[i - 1];\n\n    for (int i = v.size() - 1; i >= 0; i--)\n    {\n        int d = extract_digit(v[i], place);\n        tmp[C[d] - 1] = v[i];\n        C[d]--;\n    }\n\n    v.swap(tmp);\n}\n\n\nvoid RadixSort(std::vector<int> &v, int element_max_width = 11)\n{\n    std::vector<int> tmp (v.size());\n\n    for (int place = 0; place < element_max_width; ++place)\n        CountingSort(v, tmp, place);\n}\n"})}),"\n",(0,r.jsx)(t.hr,{})]})}function h(n={}){const{wrapper:t}={...(0,o.R)(),...n.components};return t?(0,r.jsx)(t,{...n,children:(0,r.jsx)(d,{...n})}):d(n)}},6755:(n,t,i)=>{i.d(t,{R:()=>a,x:()=>s});var e=i(8101);const r={},o=e.createContext(r);function a(n){const t=e.useContext(o);return e.useMemo((function(){return"function"==typeof n?n(t):{...t,...n}}),[t,n])}function s(n){let t;return t=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:a(n.components),e.createElement(o.Provider,{value:t},n.children)}},1816:n=>{n.exports=JSON.parse('{"permalink":"/blog/\u975e\u57fa\u4e8e\u6bd4\u8f83\u6392\u5e8f","editUrl":"https://github.com/viennadd/blog_2025/tree/main/blog/\u975e\u57fa\u4e8e\u6bd4\u8f83\u6392\u5e8f.md","source":"@site/blog/\u975e\u57fa\u4e8e\u6bd4\u8f83\u6392\u5e8f.md","title":"\u975e\u57fa\u4e8e\u6bd4\u8f83\u7684\u6392\u5e8f\u7b97\u6cd5","description":"\u8ba1\u6570\u6392\u5e8f(Counting Sort)\u3001\u6876\u6392\u5e8f\u3001\u57fa\u6570\u6392\u5e8f\u4e09\u4e2a\u5df2\u7ecf\u6709\u4e0d\u5c11\u5f88\u597d\u7684\u535a\u5ba2\u6587\u7ae0\u4ecb\u7ecd\uff0c\u4f46\u4e0d\u81ea\u5df1\u5c1d\u8bd5\u63cf\u8ff0\u4e00\u904d\u5c31\u96be\u4ee5\u719f\u6089\uff0c\u6743\u5f53\u8bb0\u5f55\u3002","date":"2016-03-21T23:42:16.000Z","tags":[{"inline":true,"label":"\u6392\u5e8f","permalink":"/blog/tags/\u6392\u5e8f"}],"readingTime":4.805,"hasTruncateMarker":true,"authors":[{"name":"Alex Chen","title":"The main character of the story","url":"https://vienna.bio","page":null,"socials":{"x":"https://x.com/viennadd","linkedin":"https://www.linkedin.com/in/alex-dd/","github":"https://github.com/viennadd"},"imageURL":"https://github.com/viennadd.png","key":"alexchen"}],"frontMatter":{"title":"\u975e\u57fa\u4e8e\u6bd4\u8f83\u7684\u6392\u5e8f\u7b97\u6cd5","date":"2016-03-21T23:42:16.000Z","tags":["\u6392\u5e8f"],"categories":"Tech Notes","authors":["alexchen"]},"unlisted":false,"prevItem":{"title":"\u97e9\u5267\u300a\u672a\u751f\u300b","permalink":"/blog/\u97e9\u5267\u300a\u672a\u751f\u300b"},"nextItem":{"title":"\u6700\u8fd1\u770b\u7684\u5267","permalink":"/blog/\u6700\u8fd1\u770b\u7684\u5267"}}')}}]);